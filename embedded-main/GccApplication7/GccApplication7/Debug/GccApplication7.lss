
GccApplication7.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001162  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000005e  00800060  00001162  000011d6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00001234  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001264  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000001e0  00000000  00000000  000012a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00002153  00000000  00000000  00001480  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000d30  00000000  00000000  000035d3  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00001389  00000000  00000000  00004303  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000039c  00000000  00000000  0000568c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000006fb  00000000  00000000  00005a28  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000011e0  00000000  00000000  00006123  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000168  00000000  00000000  00007303  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e2 e6       	ldi	r30, 0x62	; 98
      68:	f1 e1       	ldi	r31, 0x11	; 17
      6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0
      70:	ae 3b       	cpi	r26, 0xBE	; 190
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
      76:	0e 94 8a 02 	call	0x514	; 0x514 <main>
      7a:	0c 94 af 08 	jmp	0x115e	; 0x115e <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <welcome_screen>:

//void LCD_intialize(void);


void welcome_screen()
{
      82:	0f 93       	push	r16
      84:	1f 93       	push	r17
      86:	cf 93       	push	r28
      88:	df 93       	push	r29
	
	int j =0;
      8a:	00 e0       	ldi	r16, 0x00	; 0
      8c:	10 e0       	ldi	r17, 0x00	; 0
	while ( j <= 2)
      8e:	31 c0       	rjmp	.+98     	; 0xf2 <welcome_screen+0x70>
	{
		for (int i = 9; i >= 0; i--)
		{
			LCD_WriteString("WELCOME", 0, i);
      90:	4c 2f       	mov	r20, r28
      92:	60 e0       	ldi	r22, 0x00	; 0
      94:	8c e6       	ldi	r24, 0x6C	; 108
      96:	90 e0       	ldi	r25, 0x00	; 0
      98:	0e 94 18 04 	call	0x830	; 0x830 <LCD_WriteString>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
      9c:	2f ef       	ldi	r18, 0xFF	; 255
      9e:	80 e7       	ldi	r24, 0x70	; 112
      a0:	92 e0       	ldi	r25, 0x02	; 2
      a2:	21 50       	subi	r18, 0x01	; 1
      a4:	80 40       	sbci	r24, 0x00	; 0
      a6:	90 40       	sbci	r25, 0x00	; 0
      a8:	e1 f7       	brne	.-8      	; 0xa2 <welcome_screen+0x20>
      aa:	00 c0       	rjmp	.+0      	; 0xac <welcome_screen+0x2a>
      ac:	00 00       	nop
			_delay_ms(100);
			LCD_clearscreen();
      ae:	0e 94 01 04 	call	0x802	; 0x802 <LCD_clearscreen>
{
	
	int j =0;
	while ( j <= 2)
	{
		for (int i = 9; i >= 0; i--)
      b2:	21 97       	sbiw	r28, 0x01	; 1
      b4:	02 c0       	rjmp	.+4      	; 0xba <welcome_screen+0x38>
      b6:	c9 e0       	ldi	r28, 0x09	; 9
      b8:	d0 e0       	ldi	r29, 0x00	; 0
      ba:	dd 23       	and	r29, r29
      bc:	4c f7       	brge	.-46     	; 0x90 <welcome_screen+0xe>
      be:	c0 e0       	ldi	r28, 0x00	; 0
      c0:	d0 e0       	ldi	r29, 0x00	; 0
      c2:	12 c0       	rjmp	.+36     	; 0xe8 <welcome_screen+0x66>
			LCD_clearscreen();
		}
		
		for (int i = 0; i <= 9; i++)
		{
			LCD_WriteString("WELCOME", 0, i);
      c4:	4c 2f       	mov	r20, r28
      c6:	60 e0       	ldi	r22, 0x00	; 0
      c8:	8c e6       	ldi	r24, 0x6C	; 108
      ca:	90 e0       	ldi	r25, 0x00	; 0
      cc:	0e 94 18 04 	call	0x830	; 0x830 <LCD_WriteString>
      d0:	2f ef       	ldi	r18, 0xFF	; 255
      d2:	80 e7       	ldi	r24, 0x70	; 112
      d4:	92 e0       	ldi	r25, 0x02	; 2
      d6:	21 50       	subi	r18, 0x01	; 1
      d8:	80 40       	sbci	r24, 0x00	; 0
      da:	90 40       	sbci	r25, 0x00	; 0
      dc:	e1 f7       	brne	.-8      	; 0xd6 <welcome_screen+0x54>
      de:	00 c0       	rjmp	.+0      	; 0xe0 <welcome_screen+0x5e>
      e0:	00 00       	nop
			_delay_ms(100);
			LCD_clearscreen();
      e2:	0e 94 01 04 	call	0x802	; 0x802 <LCD_clearscreen>
			LCD_WriteString("WELCOME", 0, i);
			_delay_ms(100);
			LCD_clearscreen();
		}
		
		for (int i = 0; i <= 9; i++)
      e6:	21 96       	adiw	r28, 0x01	; 1
      e8:	ca 30       	cpi	r28, 0x0A	; 10
      ea:	d1 05       	cpc	r29, r1
      ec:	5c f3       	brlt	.-42     	; 0xc4 <welcome_screen+0x42>
			LCD_WriteString("WELCOME", 0, i);
			_delay_ms(100);
			LCD_clearscreen();
		}
		
		j++;
      ee:	0f 5f       	subi	r16, 0xFF	; 255
      f0:	1f 4f       	sbci	r17, 0xFF	; 255

void welcome_screen()
{
	
	int j =0;
	while ( j <= 2)
      f2:	03 30       	cpi	r16, 0x03	; 3
      f4:	11 05       	cpc	r17, r1
      f6:	fc f2       	brlt	.-66     	; 0xb6 <welcome_screen+0x34>
		}
		
		j++;
	}
	
	LCD_WriteString("SET:25", 0, 0);   // set temperature
      f8:	40 e0       	ldi	r20, 0x00	; 0
      fa:	60 e0       	ldi	r22, 0x00	; 0
      fc:	84 e7       	ldi	r24, 0x74	; 116
      fe:	90 e0       	ldi	r25, 0x00	; 0
     100:	0e 94 18 04 	call	0x830	; 0x830 <LCD_WriteString>
	LCD_WriteString("STATE:STANDBY", 1, 0);  // system state
     104:	40 e0       	ldi	r20, 0x00	; 0
     106:	61 e0       	ldi	r22, 0x01	; 1
     108:	8b e7       	ldi	r24, 0x7B	; 123
     10a:	90 e0       	ldi	r25, 0x00	; 0
     10c:	0e 94 18 04 	call	0x830	; 0x830 <LCD_WriteString>
}
     110:	df 91       	pop	r29
     112:	cf 91       	pop	r28
     114:	1f 91       	pop	r17
     116:	0f 91       	pop	r16
     118:	08 95       	ret

0000011a <operation>:
{
	unsigned char read_keypad_value = 0xff;
	
	do
	{
		read_keypad_value = keypad_check_press();
     11a:	0e 94 dd 02 	call	0x5ba	; 0x5ba <keypad_check_press>
	} while (read_keypad_value == 0xff);
     11e:	8f 3f       	cpi	r24, 0xFF	; 255
     120:	e1 f3       	breq	.-8      	; 0x11a <operation>
	
	if (read_keypad_value == (unsigned char) 12)
     122:	8c 30       	cpi	r24, 0x0C	; 12
     124:	41 f4       	brne	.+16     	; 0x136 <operation+0x1c>
	{
		LCD_GoToPos(1,6);
     126:	66 e0       	ldi	r22, 0x06	; 6
     128:	81 e0       	ldi	r24, 0x01	; 1
     12a:	0e 94 0b 04 	call	0x816	; 0x816 <LCD_GoToPos>
		LCD_vSend_string("OPERATION");
     12e:	89 e8       	ldi	r24, 0x89	; 137
     130:	90 e0       	ldi	r25, 0x00	; 0
     132:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <LCD_vSend_string>
     136:	08 95       	ret

00000138 <IDLE_screen_states>:
	}
	
}
char IDLE_screen_states()
{
     138:	cf 93       	push	r28
     13a:	df 93       	push	r29
	keypad_Intialize();
     13c:	0e 94 a0 02 	call	0x540	; 0x540 <keypad_Intialize>
	unsigned char read_sensor =0;
	unsigned char set_temperature = 0;
	unsigned char read_keypad_value = 0xff;
	
	LCD_GoToPos(0,4);
     140:	64 e0       	ldi	r22, 0x04	; 4
     142:	80 e0       	ldi	r24, 0x00	; 0
     144:	0e 94 0b 04 	call	0x816	; 0x816 <LCD_GoToPos>
	
	do
	{
		read_keypad_value = keypad_check_press();
     148:	0e 94 dd 02 	call	0x5ba	; 0x5ba <keypad_check_press>
	} while (read_keypad_value == 0xff);
     14c:	8f 3f       	cpi	r24, 0xFF	; 255
     14e:	e1 f3       	breq	.-8      	; 0x148 <IDLE_screen_states+0x10>
	
	set_temperature= (read_keypad_value * 10);
     150:	88 0f       	add	r24, r24
     152:	c8 2f       	mov	r28, r24
     154:	cc 0f       	add	r28, r28
     156:	cc 0f       	add	r28, r28
     158:	c8 0f       	add	r28, r24
     15a:	2f ef       	ldi	r18, 0xFF	; 255
     15c:	82 e5       	ldi	r24, 0x52	; 82
     15e:	97 e0       	ldi	r25, 0x07	; 7
     160:	21 50       	subi	r18, 0x01	; 1
     162:	80 40       	sbci	r24, 0x00	; 0
     164:	90 40       	sbci	r25, 0x00	; 0
     166:	e1 f7       	brne	.-8      	; 0x160 <IDLE_screen_states+0x28>
     168:	00 c0       	rjmp	.+0      	; 0x16a <IDLE_screen_states+0x32>
     16a:	00 00       	nop
	_delay_ms(300);
	read_keypad_value = 0xff;
	
	do
	{
		read_keypad_value = keypad_check_press();
     16c:	0e 94 dd 02 	call	0x5ba	; 0x5ba <keypad_check_press>
	} while (read_keypad_value == 0xff);
     170:	8f 3f       	cpi	r24, 0xFF	; 255
     172:	e1 f3       	breq	.-8      	; 0x16c <IDLE_screen_states+0x34>
	
	set_temperature= (set_temperature + read_keypad_value);
     174:	c8 0f       	add	r28, r24
     176:	2f ef       	ldi	r18, 0xFF	; 255
     178:	82 e5       	ldi	r24, 0x52	; 82
     17a:	97 e0       	ldi	r25, 0x07	; 7
     17c:	21 50       	subi	r18, 0x01	; 1
     17e:	80 40       	sbci	r24, 0x00	; 0
     180:	90 40       	sbci	r25, 0x00	; 0
     182:	e1 f7       	brne	.-8      	; 0x17c <IDLE_screen_states+0x44>
     184:	00 c0       	rjmp	.+0      	; 0x186 <IDLE_screen_states+0x4e>
     186:	00 00       	nop
	_delay_ms(300);
	
	LCD_vSend_char(((set_temperature/10)+48));
     188:	dd ec       	ldi	r29, 0xCD	; 205
     18a:	cd 9f       	mul	r28, r29
     18c:	d1 2d       	mov	r29, r1
     18e:	11 24       	eor	r1, r1
     190:	d6 95       	lsr	r29
     192:	d6 95       	lsr	r29
     194:	d6 95       	lsr	r29
     196:	80 e3       	ldi	r24, 0x30	; 48
     198:	8d 0f       	add	r24, r29
     19a:	0e 94 d2 03 	call	0x7a4	; 0x7a4 <LCD_vSend_char>
	LCD_vSend_char(((set_temperature%10)+48));
     19e:	dd 0f       	add	r29, r29
     1a0:	8d 2f       	mov	r24, r29
     1a2:	88 0f       	add	r24, r24
     1a4:	88 0f       	add	r24, r24
     1a6:	d8 0f       	add	r29, r24
     1a8:	8c 2f       	mov	r24, r28
     1aa:	8d 1b       	sub	r24, r29
     1ac:	80 5d       	subi	r24, 0xD0	; 208
     1ae:	0e 94 d2 03 	call	0x7a4	; 0x7a4 <LCD_vSend_char>
	if (read_keypad_value == (unsigned char) 12)
	{
		LCD_GoToPos(1,6);
		LCD_vSend_string("OPERATION");
	}*/
	operation();
     1b2:	0e 94 8d 00 	call	0x11a	; 0x11a <operation>
	
	
	return set_temperature;
}
     1b6:	8c 2f       	mov	r24, r28
     1b8:	df 91       	pop	r29
     1ba:	cf 91       	pop	r28
     1bc:	08 95       	ret

000001be <standby>:
	
	unsigned char read_keypad_value = 0xff;
	
	do
	{
		read_keypad_value = keypad_check_press();
     1be:	0e 94 dd 02 	call	0x5ba	; 0x5ba <keypad_check_press>
	} while (read_keypad_value == 0xff);
     1c2:	8f 3f       	cpi	r24, 0xFF	; 255
     1c4:	e1 f3       	breq	.-8      	; 0x1be <standby>
	if (read_keypad_value == (unsigned char) 12)
     1c6:	8c 30       	cpi	r24, 0x0C	; 12
     1c8:	41 f4       	brne	.+16     	; 0x1da <standby+0x1c>
	{
		LCD_GoToPos(1,6);
     1ca:	66 e0       	ldi	r22, 0x06	; 6
     1cc:	81 e0       	ldi	r24, 0x01	; 1
     1ce:	0e 94 0b 04 	call	0x816	; 0x816 <LCD_GoToPos>
		LCD_vSend_string("  STANDBY ");
     1d2:	83 e9       	ldi	r24, 0x93	; 147
     1d4:	90 e0       	ldi	r25, 0x00	; 0
     1d6:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <LCD_vSend_string>
     1da:	08 95       	ret

000001dc <read_tc72>:
	}
}
void read_tc72( int set_temperature , int s )
{
     1dc:	3f 92       	push	r3
     1de:	4f 92       	push	r4
     1e0:	5f 92       	push	r5
     1e2:	6f 92       	push	r6
     1e4:	7f 92       	push	r7
     1e6:	8f 92       	push	r8
     1e8:	9f 92       	push	r9
     1ea:	af 92       	push	r10
     1ec:	bf 92       	push	r11
     1ee:	cf 92       	push	r12
     1f0:	df 92       	push	r13
     1f2:	ef 92       	push	r14
     1f4:	ff 92       	push	r15
     1f6:	0f 93       	push	r16
     1f8:	1f 93       	push	r17
     1fa:	cf 93       	push	r28
     1fc:	df 93       	push	r29
     1fe:	ec 01       	movw	r28, r24
     200:	8b 01       	movw	r16, r22
	unsigned char setTEM ;
	

	
    
    PWM_init();
     202:	0e 94 63 06 	call	0xcc6	; 0xcc6 <PWM_init>
	ADC_Init();
     206:	0e 94 75 04 	call	0x8ea	; 0x8ea <ADC_Init>
     20a:	2f e7       	ldi	r18, 0x7F	; 127
     20c:	89 ea       	ldi	r24, 0xA9	; 169
     20e:	93 e0       	ldi	r25, 0x03	; 3
     210:	21 50       	subi	r18, 0x01	; 1
     212:	80 40       	sbci	r24, 0x00	; 0
     214:	90 40       	sbci	r25, 0x00	; 0
     216:	e1 f7       	brne	.-8      	; 0x210 <read_tc72+0x34>
     218:	00 c0       	rjmp	.+0      	; 0x21a <read_tc72+0x3e>
     21a:	00 00       	nop
     21c:	65 c1       	rjmp	.+714    	; 0x4e8 <__EEPROM_REGION_LENGTH__+0xe8>
	
   
   while(s)
	{
		
	    DIO_write( 'B',4,1);
     21e:	41 e0       	ldi	r20, 0x01	; 1
     220:	64 e0       	ldi	r22, 0x04	; 4
     222:	82 e4       	ldi	r24, 0x42	; 66
     224:	0e 94 00 05 	call	0xa00	; 0xa00 <DIO_write>
		masterTransmit(0x02);
     228:	82 e0       	ldi	r24, 0x02	; 2
     22a:	0e 94 70 06 	call	0xce0	; 0xce0 <masterTransmit>
		masterTransmit(0x00);
     22e:	80 e0       	ldi	r24, 0x00	; 0
     230:	0e 94 70 06 	call	0xce0	; 0xce0 <masterTransmit>
	    DIO_write( 'B',4,0);
     234:	40 e0       	ldi	r20, 0x00	; 0
     236:	64 e0       	ldi	r22, 0x04	; 4
     238:	82 e4       	ldi	r24, 0x42	; 66
     23a:	0e 94 00 05 	call	0xa00	; 0xa00 <DIO_write>
     23e:	8f ec       	ldi	r24, 0xCF	; 207
     240:	97 e0       	ldi	r25, 0x07	; 7
     242:	01 97       	sbiw	r24, 0x01	; 1
     244:	f1 f7       	brne	.-4      	; 0x242 <read_tc72+0x66>
     246:	00 c0       	rjmp	.+0      	; 0x248 <read_tc72+0x6c>
     248:	00 00       	nop
		_delay_ms(1);
		msb=masterReceive();
     24a:	0e 94 74 06 	call	0xce8	; 0xce8 <masterReceive>
     24e:	38 2e       	mov	r3, r24
		

		double Current_Temperature = msb;
     250:	68 2f       	mov	r22, r24
     252:	70 e0       	ldi	r23, 0x00	; 0
     254:	80 e0       	ldi	r24, 0x00	; 0
     256:	90 e0       	ldi	r25, 0x00	; 0
     258:	0e 94 8b 07 	call	0xf16	; 0xf16 <__floatunsisf>
     25c:	6b 01       	movw	r12, r22
     25e:	7c 01       	movw	r14, r24
		/*operation(set_temperature , msb);*/
		double v_r;
		double Vt;
		double value;
		if ( set_temperature > Current_Temperature )
     260:	be 01       	movw	r22, r28
     262:	0d 2e       	mov	r0, r29
     264:	00 0c       	add	r0, r0
     266:	88 0b       	sbc	r24, r24
     268:	99 0b       	sbc	r25, r25
     26a:	0e 94 8d 07 	call	0xf1a	; 0xf1a <__floatsisf>
     26e:	4b 01       	movw	r8, r22
     270:	5c 01       	movw	r10, r24
     272:	9b 01       	movw	r18, r22
     274:	ac 01       	movw	r20, r24
     276:	c7 01       	movw	r24, r14
     278:	b6 01       	movw	r22, r12
     27a:	0e 94 e5 06 	call	0xdca	; 0xdca <__cmpsf2>
     27e:	88 23       	and	r24, r24
     280:	0c f0       	brlt	.+2      	; 0x284 <read_tc72+0xa8>
     282:	4b c0       	rjmp	.+150    	; 0x31a <read_tc72+0x13e>
		{
			LCD_GoToPos(0, 10);
     284:	6a e0       	ldi	r22, 0x0A	; 10
     286:	80 e0       	ldi	r24, 0x00	; 0
     288:	0e 94 0b 04 	call	0x816	; 0x816 <LCD_GoToPos>
			LCD_vSend_string("CRT:");
     28c:	8e e9       	ldi	r24, 0x9E	; 158
     28e:	90 e0       	ldi	r25, 0x00	; 0
     290:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <LCD_vSend_string>
			LCD_GoToPos(0,14);
     294:	6e e0       	ldi	r22, 0x0E	; 14
     296:	80 e0       	ldi	r24, 0x00	; 0
     298:	0e 94 0b 04 	call	0x816	; 0x816 <LCD_GoToPos>
			
			LCD_vSend_char(((msb/10)+48));
     29c:	8d ec       	ldi	r24, 0xCD	; 205
     29e:	38 9e       	mul	r3, r24
     2a0:	71 2c       	mov	r7, r1
     2a2:	11 24       	eor	r1, r1
     2a4:	76 94       	lsr	r7
     2a6:	76 94       	lsr	r7
     2a8:	76 94       	lsr	r7
     2aa:	80 e3       	ldi	r24, 0x30	; 48
     2ac:	87 0d       	add	r24, r7
     2ae:	0e 94 d2 03 	call	0x7a4	; 0x7a4 <LCD_vSend_char>
			LCD_vSend_char(((msb%10)+48));
     2b2:	77 0c       	add	r7, r7
     2b4:	87 2d       	mov	r24, r7
     2b6:	88 0f       	add	r24, r24
     2b8:	88 0f       	add	r24, r24
     2ba:	78 0e       	add	r7, r24
     2bc:	83 2d       	mov	r24, r3
     2be:	87 19       	sub	r24, r7
     2c0:	80 5d       	subi	r24, 0xD0	; 208
     2c2:	0e 94 d2 03 	call	0x7a4	; 0x7a4 <LCD_vSend_char>
			
			Vt = (((double)set_temperature-Current_Temperature) / 100) * 10;
     2c6:	a7 01       	movw	r20, r14
     2c8:	96 01       	movw	r18, r12
     2ca:	c5 01       	movw	r24, r10
     2cc:	b4 01       	movw	r22, r8
     2ce:	0e 94 78 06 	call	0xcf0	; 0xcf0 <__subsf3>
     2d2:	6b 01       	movw	r12, r22
     2d4:	7c 01       	movw	r14, r24
     2d6:	20 e0       	ldi	r18, 0x00	; 0
     2d8:	30 e0       	ldi	r19, 0x00	; 0
     2da:	48 ec       	ldi	r20, 0xC8	; 200
     2dc:	52 e4       	ldi	r21, 0x42	; 66
     2de:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <__divsf3>
     2e2:	20 e0       	ldi	r18, 0x00	; 0
     2e4:	30 e0       	ldi	r19, 0x00	; 0
     2e6:	40 e2       	ldi	r20, 0x20	; 32
     2e8:	51 e4       	ldi	r21, 0x41	; 65
     2ea:	0e 94 42 08 	call	0x1084	; 0x1084 <__mulsf3>
     2ee:	2b 01       	movw	r4, r22
     2f0:	3c 01       	movw	r6, r24
			if ((set_temperature - Current_Temperature)< 5)
     2f2:	20 e0       	ldi	r18, 0x00	; 0
     2f4:	30 e0       	ldi	r19, 0x00	; 0
     2f6:	40 ea       	ldi	r20, 0xA0	; 160
     2f8:	50 e4       	ldi	r21, 0x40	; 64
     2fa:	c7 01       	movw	r24, r14
     2fc:	b6 01       	movw	r22, r12
     2fe:	0e 94 e5 06 	call	0xdca	; 0xdca <__cmpsf2>
     302:	88 23       	and	r24, r24
     304:	0c f0       	brlt	.+2      	; 0x308 <read_tc72+0x12c>
     306:	ad c0       	rjmp	.+346    	; 0x462 <__EEPROM_REGION_LENGTH__+0x62>
			{
				LCD_GoToPos(1,6);
     308:	66 e0       	ldi	r22, 0x06	; 6
     30a:	81 e0       	ldi	r24, 0x01	; 1
     30c:	0e 94 0b 04 	call	0x816	; 0x816 <LCD_GoToPos>
				LCD_vSend_string("  Normal  ");
     310:	83 ea       	ldi	r24, 0xA3	; 163
     312:	90 e0       	ldi	r25, 0x00	; 0
     314:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <LCD_vSend_string>
     318:	a4 c0       	rjmp	.+328    	; 0x462 <__EEPROM_REGION_LENGTH__+0x62>
			}
			
		}
		else if (Current_Temperature >= set_temperature)
     31a:	a5 01       	movw	r20, r10
     31c:	94 01       	movw	r18, r8
     31e:	c7 01       	movw	r24, r14
     320:	b6 01       	movw	r22, r12
     322:	0e 94 3d 08 	call	0x107a	; 0x107a <__gesf2>
     326:	88 23       	and	r24, r24
     328:	0c f4       	brge	.+2      	; 0x32c <read_tc72+0x150>
     32a:	9b c0       	rjmp	.+310    	; 0x462 <__EEPROM_REGION_LENGTH__+0x62>
		{
			
			Vt = 0;
			if ((Current_Temperature -set_temperature)<= 5 )
     32c:	a5 01       	movw	r20, r10
     32e:	94 01       	movw	r18, r8
     330:	c7 01       	movw	r24, r14
     332:	b6 01       	movw	r22, r12
     334:	0e 94 78 06 	call	0xcf0	; 0xcf0 <__subsf3>
     338:	6b 01       	movw	r12, r22
     33a:	7c 01       	movw	r14, r24
     33c:	20 e0       	ldi	r18, 0x00	; 0
     33e:	30 e0       	ldi	r19, 0x00	; 0
     340:	40 ea       	ldi	r20, 0xA0	; 160
     342:	50 e4       	ldi	r21, 0x40	; 64
     344:	0e 94 e5 06 	call	0xdca	; 0xdca <__cmpsf2>
     348:	18 16       	cp	r1, r24
     34a:	4c f1       	brlt	.+82     	; 0x39e <read_tc72+0x1c2>
			{
				LCD_GoToPos(0, 10);
     34c:	6a e0       	ldi	r22, 0x0A	; 10
     34e:	80 e0       	ldi	r24, 0x00	; 0
     350:	0e 94 0b 04 	call	0x816	; 0x816 <LCD_GoToPos>
				LCD_vSend_string("CRT:");
     354:	8e e9       	ldi	r24, 0x9E	; 158
     356:	90 e0       	ldi	r25, 0x00	; 0
     358:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <LCD_vSend_string>
				
				LCD_GoToPos(0,14);
     35c:	6e e0       	ldi	r22, 0x0E	; 14
     35e:	80 e0       	ldi	r24, 0x00	; 0
     360:	0e 94 0b 04 	call	0x816	; 0x816 <LCD_GoToPos>
				LCD_vSend_char(((msb/10)+48));
     364:	8d ec       	ldi	r24, 0xCD	; 205
     366:	38 9e       	mul	r3, r24
     368:	b1 2c       	mov	r11, r1
     36a:	11 24       	eor	r1, r1
     36c:	b6 94       	lsr	r11
     36e:	b6 94       	lsr	r11
     370:	b6 94       	lsr	r11
     372:	80 e3       	ldi	r24, 0x30	; 48
     374:	8b 0d       	add	r24, r11
     376:	0e 94 d2 03 	call	0x7a4	; 0x7a4 <LCD_vSend_char>
				LCD_vSend_char(((msb%10)+48));
     37a:	bb 0c       	add	r11, r11
     37c:	8b 2d       	mov	r24, r11
     37e:	88 0f       	add	r24, r24
     380:	88 0f       	add	r24, r24
     382:	b8 0e       	add	r11, r24
     384:	83 2d       	mov	r24, r3
     386:	8b 19       	sub	r24, r11
     388:	80 5d       	subi	r24, 0xD0	; 208
     38a:	0e 94 d2 03 	call	0x7a4	; 0x7a4 <LCD_vSend_char>
				LCD_GoToPos(1,6);
     38e:	66 e0       	ldi	r22, 0x06	; 6
     390:	81 e0       	ldi	r24, 0x01	; 1
     392:	0e 94 0b 04 	call	0x816	; 0x816 <LCD_GoToPos>
				LCD_vSend_string("  Normal  ");
     396:	83 ea       	ldi	r24, 0xA3	; 163
     398:	90 e0       	ldi	r25, 0x00	; 0
     39a:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <LCD_vSend_string>
				
				
			}
			if ((Current_Temperature -set_temperature)> 10)
     39e:	20 e0       	ldi	r18, 0x00	; 0
     3a0:	30 e0       	ldi	r19, 0x00	; 0
     3a2:	40 e2       	ldi	r20, 0x20	; 32
     3a4:	51 e4       	ldi	r21, 0x41	; 65
     3a6:	c7 01       	movw	r24, r14
     3a8:	b6 01       	movw	r22, r12
     3aa:	0e 94 3d 08 	call	0x107a	; 0x107a <__gesf2>
     3ae:	18 16       	cp	r1, r24
     3b0:	84 f4       	brge	.+32     	; 0x3d2 <read_tc72+0x1f6>
			{
				LCD_clearscreen();
     3b2:	0e 94 01 04 	call	0x802	; 0x802 <LCD_clearscreen>
				LCD_GoToPos(1,0);
     3b6:	60 e0       	ldi	r22, 0x00	; 0
     3b8:	81 e0       	ldi	r24, 0x01	; 1
     3ba:	0e 94 0b 04 	call	0x816	; 0x816 <LCD_GoToPos>
				LCD_vSend_string("STATE : error  ");
     3be:	8e ea       	ldi	r24, 0xAE	; 174
     3c0:	90 e0       	ldi	r25, 0x00	; 0
     3c2:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <LCD_vSend_string>
				read_tc72( 25 , 0);
     3c6:	60 e0       	ldi	r22, 0x00	; 0
     3c8:	70 e0       	ldi	r23, 0x00	; 0
     3ca:	89 e1       	ldi	r24, 0x19	; 25
     3cc:	90 e0       	ldi	r25, 0x00	; 0
     3ce:	0e 94 ee 00 	call	0x1dc	; 0x1dc <read_tc72>
			}
			if ((5<(Current_Temperature -set_temperature)) && ((Current_Temperature -set_temperature)<10))
     3d2:	20 e0       	ldi	r18, 0x00	; 0
     3d4:	30 e0       	ldi	r19, 0x00	; 0
     3d6:	40 ea       	ldi	r20, 0xA0	; 160
     3d8:	50 e4       	ldi	r21, 0x40	; 64
     3da:	c7 01       	movw	r24, r14
     3dc:	b6 01       	movw	r22, r12
     3de:	0e 94 3d 08 	call	0x107a	; 0x107a <__gesf2>
     3e2:	18 16       	cp	r1, r24
     3e4:	bc f5       	brge	.+110    	; 0x454 <__EEPROM_REGION_LENGTH__+0x54>
     3e6:	20 e0       	ldi	r18, 0x00	; 0
     3e8:	30 e0       	ldi	r19, 0x00	; 0
     3ea:	40 e2       	ldi	r20, 0x20	; 32
     3ec:	51 e4       	ldi	r21, 0x41	; 65
     3ee:	c7 01       	movw	r24, r14
     3f0:	b6 01       	movw	r22, r12
     3f2:	0e 94 e5 06 	call	0xdca	; 0xdca <__cmpsf2>
     3f6:	88 23       	and	r24, r24
     3f8:	8c f5       	brge	.+98     	; 0x45c <__EEPROM_REGION_LENGTH__+0x5c>
			{
				LCD_GoToPos(0, 10);
     3fa:	6a e0       	ldi	r22, 0x0A	; 10
     3fc:	80 e0       	ldi	r24, 0x00	; 0
     3fe:	0e 94 0b 04 	call	0x816	; 0x816 <LCD_GoToPos>
				LCD_vSend_string("CRT:");
     402:	8e e9       	ldi	r24, 0x9E	; 158
     404:	90 e0       	ldi	r25, 0x00	; 0
     406:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <LCD_vSend_string>
				
				LCD_GoToPos(0,14);
     40a:	6e e0       	ldi	r22, 0x0E	; 14
     40c:	80 e0       	ldi	r24, 0x00	; 0
     40e:	0e 94 0b 04 	call	0x816	; 0x816 <LCD_GoToPos>
				LCD_vSend_char(((msb/10)+48));
     412:	8d ec       	ldi	r24, 0xCD	; 205
     414:	38 9e       	mul	r3, r24
     416:	f1 2c       	mov	r15, r1
     418:	11 24       	eor	r1, r1
     41a:	f6 94       	lsr	r15
     41c:	f6 94       	lsr	r15
     41e:	f6 94       	lsr	r15
     420:	80 e3       	ldi	r24, 0x30	; 48
     422:	8f 0d       	add	r24, r15
     424:	0e 94 d2 03 	call	0x7a4	; 0x7a4 <LCD_vSend_char>
				LCD_vSend_char(((msb%10)+48));
     428:	ff 0c       	add	r15, r15
     42a:	8f 2d       	mov	r24, r15
     42c:	88 0f       	add	r24, r24
     42e:	88 0f       	add	r24, r24
     430:	f8 0e       	add	r15, r24
     432:	83 2d       	mov	r24, r3
     434:	8f 19       	sub	r24, r15
     436:	80 5d       	subi	r24, 0xD0	; 208
     438:	0e 94 d2 03 	call	0x7a4	; 0x7a4 <LCD_vSend_char>
				LCD_GoToPos(1,6);
     43c:	66 e0       	ldi	r22, 0x06	; 6
     43e:	81 e0       	ldi	r24, 0x01	; 1
     440:	0e 94 0b 04 	call	0x816	; 0x816 <LCD_GoToPos>
				LCD_vSend_string("OPERATION");
     444:	89 e8       	ldi	r24, 0x89	; 137
     446:	90 e0       	ldi	r25, 0x00	; 0
     448:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <LCD_vSend_string>
			
		}
		else if (Current_Temperature >= set_temperature)
		{
			
			Vt = 0;
     44c:	41 2c       	mov	r4, r1
     44e:	51 2c       	mov	r5, r1
     450:	32 01       	movw	r6, r4
     452:	07 c0       	rjmp	.+14     	; 0x462 <__EEPROM_REGION_LENGTH__+0x62>
     454:	41 2c       	mov	r4, r1
     456:	51 2c       	mov	r5, r1
     458:	32 01       	movw	r6, r4
     45a:	03 c0       	rjmp	.+6      	; 0x462 <__EEPROM_REGION_LENGTH__+0x62>
     45c:	41 2c       	mov	r4, r1
     45e:	51 2c       	mov	r5, r1
     460:	32 01       	movw	r6, r4
			}
			
		}
		
		
		value=  ADC_Read(0);
     462:	80 e0       	ldi	r24, 0x00	; 0
     464:	0e 94 7b 04 	call	0x8f6	; 0x8f6 <ADC_Read>
     468:	bc 01       	movw	r22, r24
     46a:	99 0f       	add	r25, r25
     46c:	88 0b       	sbc	r24, r24
     46e:	99 0b       	sbc	r25, r25
     470:	0e 94 8d 07 	call	0xf1a	; 0xf1a <__floatsisf>
		v_r =   ((value*5.0)/1023.0)*100;
     474:	20 e0       	ldi	r18, 0x00	; 0
     476:	30 e0       	ldi	r19, 0x00	; 0
     478:	40 ea       	ldi	r20, 0xA0	; 160
     47a:	50 e4       	ldi	r21, 0x40	; 64
     47c:	0e 94 42 08 	call	0x1084	; 0x1084 <__mulsf3>
     480:	20 e0       	ldi	r18, 0x00	; 0
     482:	30 ec       	ldi	r19, 0xC0	; 192
     484:	4f e7       	ldi	r20, 0x7F	; 127
     486:	54 e4       	ldi	r21, 0x44	; 68
     488:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <__divsf3>
     48c:	20 e0       	ldi	r18, 0x00	; 0
     48e:	30 e0       	ldi	r19, 0x00	; 0
     490:	48 ec       	ldi	r20, 0xC8	; 200
     492:	52 e4       	ldi	r21, 0x42	; 66
     494:	0e 94 42 08 	call	0x1084	; 0x1084 <__mulsf3>
		
		OCR0 =  ((((v_r * 2)/10) * Vt) / 10)*100;
     498:	9b 01       	movw	r18, r22
     49a:	ac 01       	movw	r20, r24
     49c:	0e 94 79 06 	call	0xcf2	; 0xcf2 <__addsf3>
     4a0:	20 e0       	ldi	r18, 0x00	; 0
     4a2:	30 e0       	ldi	r19, 0x00	; 0
     4a4:	40 e2       	ldi	r20, 0x20	; 32
     4a6:	51 e4       	ldi	r21, 0x41	; 65
     4a8:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <__divsf3>
     4ac:	9b 01       	movw	r18, r22
     4ae:	ac 01       	movw	r20, r24
     4b0:	c3 01       	movw	r24, r6
     4b2:	b2 01       	movw	r22, r4
     4b4:	0e 94 42 08 	call	0x1084	; 0x1084 <__mulsf3>
     4b8:	20 e0       	ldi	r18, 0x00	; 0
     4ba:	30 e0       	ldi	r19, 0x00	; 0
     4bc:	40 e2       	ldi	r20, 0x20	; 32
     4be:	51 e4       	ldi	r21, 0x41	; 65
     4c0:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <__divsf3>
     4c4:	20 e0       	ldi	r18, 0x00	; 0
     4c6:	30 e0       	ldi	r19, 0x00	; 0
     4c8:	48 ec       	ldi	r20, 0xC8	; 200
     4ca:	52 e4       	ldi	r21, 0x42	; 66
     4cc:	0e 94 42 08 	call	0x1084	; 0x1084 <__mulsf3>
     4d0:	0e 94 5c 07 	call	0xeb8	; 0xeb8 <__fixunssfsi>
     4d4:	6c bf       	out	0x3c, r22	; 60
     4d6:	9f ef       	ldi	r25, 0xFF	; 255
     4d8:	21 ee       	ldi	r18, 0xE1	; 225
     4da:	84 e0       	ldi	r24, 0x04	; 4
     4dc:	91 50       	subi	r25, 0x01	; 1
     4de:	20 40       	sbci	r18, 0x00	; 0
     4e0:	80 40       	sbci	r24, 0x00	; 0
     4e2:	e1 f7       	brne	.-8      	; 0x4dc <__EEPROM_REGION_LENGTH__+0xdc>
     4e4:	00 c0       	rjmp	.+0      	; 0x4e6 <__EEPROM_REGION_LENGTH__+0xe6>
     4e6:	00 00       	nop
    PWM_init();
	ADC_Init();
    _delay_ms(150);
	
   
   while(s)
     4e8:	01 15       	cp	r16, r1
     4ea:	11 05       	cpc	r17, r1
     4ec:	09 f0       	breq	.+2      	; 0x4f0 <__EEPROM_REGION_LENGTH__+0xf0>
     4ee:	97 ce       	rjmp	.-722    	; 0x21e <read_tc72+0x42>
		
	}
	


}
     4f0:	df 91       	pop	r29
     4f2:	cf 91       	pop	r28
     4f4:	1f 91       	pop	r17
     4f6:	0f 91       	pop	r16
     4f8:	ff 90       	pop	r15
     4fa:	ef 90       	pop	r14
     4fc:	df 90       	pop	r13
     4fe:	cf 90       	pop	r12
     500:	bf 90       	pop	r11
     502:	af 90       	pop	r10
     504:	9f 90       	pop	r9
     506:	8f 90       	pop	r8
     508:	7f 90       	pop	r7
     50a:	6f 90       	pop	r6
     50c:	5f 90       	pop	r5
     50e:	4f 90       	pop	r4
     510:	3f 90       	pop	r3
     512:	08 95       	ret

00000514 <main>:

#include "prototype.h"
int main(void)
{
	masterInit();
     514:	0e 94 6b 06 	call	0xcd6	; 0xcd6 <masterInit>
	tc72Init();
     518:	0e 94 5c 04 	call	0x8b8	; 0x8b8 <tc72Init>
	LCD_intialize();
     51c:	0e 94 7c 03 	call	0x6f8	; 0x6f8 <LCD_intialize>
   	keypad_Intialize();
     520:	0e 94 a0 02 	call	0x540	; 0x540 <keypad_Intialize>
	
	welcome_screen();
     524:	0e 94 41 00 	call	0x82	; 0x82 <welcome_screen>
	int set_temp = IDLE_screen_states();
     528:	0e 94 9c 00 	call	0x138	; 0x138 <IDLE_screen_states>
	  read_tc72(set_temp , 1);
     52c:	61 e0       	ldi	r22, 0x01	; 1
     52e:	70 e0       	ldi	r23, 0x00	; 0
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	0e 94 ee 00 	call	0x1dc	; 0x1dc <read_tc72>
	 standby();
     536:	0e 94 df 00 	call	0x1be	; 0x1be <standby>
	
	
	return 0;
	
	 
}
     53a:	80 e0       	ldi	r24, 0x00	; 0
     53c:	90 e0       	ldi	r25, 0x00	; 0
     53e:	08 95       	ret

00000540 <keypad_Intialize>:
     540:	41 e0       	ldi	r20, 0x01	; 1
     542:	60 e0       	ldi	r22, 0x00	; 0
     544:	84 e4       	ldi	r24, 0x44	; 68
     546:	0e 94 90 04 	call	0x920	; 0x920 <DIO_vsetPINDir>
     54a:	41 e0       	ldi	r20, 0x01	; 1
     54c:	61 e0       	ldi	r22, 0x01	; 1
     54e:	84 e4       	ldi	r24, 0x44	; 68
     550:	0e 94 90 04 	call	0x920	; 0x920 <DIO_vsetPINDir>
     554:	41 e0       	ldi	r20, 0x01	; 1
     556:	62 e0       	ldi	r22, 0x02	; 2
     558:	84 e4       	ldi	r24, 0x44	; 68
     55a:	0e 94 90 04 	call	0x920	; 0x920 <DIO_vsetPINDir>
     55e:	41 e0       	ldi	r20, 0x01	; 1
     560:	63 e0       	ldi	r22, 0x03	; 3
     562:	84 e4       	ldi	r24, 0x44	; 68
     564:	0e 94 90 04 	call	0x920	; 0x920 <DIO_vsetPINDir>
     568:	40 e0       	ldi	r20, 0x00	; 0
     56a:	64 e0       	ldi	r22, 0x04	; 4
     56c:	84 e4       	ldi	r24, 0x44	; 68
     56e:	0e 94 90 04 	call	0x920	; 0x920 <DIO_vsetPINDir>
     572:	40 e0       	ldi	r20, 0x00	; 0
     574:	65 e0       	ldi	r22, 0x05	; 5
     576:	84 e4       	ldi	r24, 0x44	; 68
     578:	0e 94 90 04 	call	0x920	; 0x920 <DIO_vsetPINDir>
     57c:	40 e0       	ldi	r20, 0x00	; 0
     57e:	66 e0       	ldi	r22, 0x06	; 6
     580:	84 e4       	ldi	r24, 0x44	; 68
     582:	0e 94 90 04 	call	0x920	; 0x920 <DIO_vsetPINDir>
     586:	40 e0       	ldi	r20, 0x00	; 0
     588:	67 e0       	ldi	r22, 0x07	; 7
     58a:	84 e4       	ldi	r24, 0x44	; 68
     58c:	0e 94 90 04 	call	0x920	; 0x920 <DIO_vsetPINDir>
     590:	41 e0       	ldi	r20, 0x01	; 1
     592:	64 e0       	ldi	r22, 0x04	; 4
     594:	84 e4       	ldi	r24, 0x44	; 68
     596:	0e 94 cd 05 	call	0xb9a	; 0xb9a <DIO_vconnectpullup>
     59a:	41 e0       	ldi	r20, 0x01	; 1
     59c:	65 e0       	ldi	r22, 0x05	; 5
     59e:	84 e4       	ldi	r24, 0x44	; 68
     5a0:	0e 94 cd 05 	call	0xb9a	; 0xb9a <DIO_vconnectpullup>
     5a4:	41 e0       	ldi	r20, 0x01	; 1
     5a6:	66 e0       	ldi	r22, 0x06	; 6
     5a8:	84 e4       	ldi	r24, 0x44	; 68
     5aa:	0e 94 cd 05 	call	0xb9a	; 0xb9a <DIO_vconnectpullup>
     5ae:	41 e0       	ldi	r20, 0x01	; 1
     5b0:	67 e0       	ldi	r22, 0x07	; 7
     5b2:	84 e4       	ldi	r24, 0x44	; 68
     5b4:	0e 94 cd 05 	call	0xb9a	; 0xb9a <DIO_vconnectpullup>
     5b8:	08 95       	ret

000005ba <keypad_check_press>:
     5ba:	ef 92       	push	r14
     5bc:	ff 92       	push	r15
     5be:	0f 93       	push	r16
     5c0:	1f 93       	push	r17
     5c2:	cf 93       	push	r28
     5c4:	df 93       	push	r29
     5c6:	cd b7       	in	r28, 0x3d	; 61
     5c8:	de b7       	in	r29, 0x3e	; 62
     5ca:	2c 97       	sbiw	r28, 0x0c	; 12
     5cc:	0f b6       	in	r0, 0x3f	; 63
     5ce:	f8 94       	cli
     5d0:	de bf       	out	0x3e, r29	; 62
     5d2:	0f be       	out	0x3f, r0	; 63
     5d4:	cd bf       	out	0x3d, r28	; 61
     5d6:	8c e0       	ldi	r24, 0x0C	; 12
     5d8:	e0 e6       	ldi	r30, 0x60	; 96
     5da:	f0 e0       	ldi	r31, 0x00	; 0
     5dc:	de 01       	movw	r26, r28
     5de:	11 96       	adiw	r26, 0x01	; 1
     5e0:	01 90       	ld	r0, Z+
     5e2:	0d 92       	st	X+, r0
     5e4:	8a 95       	dec	r24
     5e6:	e1 f7       	brne	.-8      	; 0x5e0 <keypad_check_press+0x26>
     5e8:	ee 24       	eor	r14, r14
     5ea:	ea 94       	dec	r14
     5ec:	f1 2c       	mov	r15, r1
     5ee:	3a c0       	rjmp	.+116    	; 0x664 <keypad_check_press+0xaa>
     5f0:	41 e0       	ldi	r20, 0x01	; 1
     5f2:	60 e0       	ldi	r22, 0x00	; 0
     5f4:	84 e4       	ldi	r24, 0x44	; 68
     5f6:	0e 94 00 05 	call	0xa00	; 0xa00 <DIO_write>
     5fa:	41 e0       	ldi	r20, 0x01	; 1
     5fc:	61 e0       	ldi	r22, 0x01	; 1
     5fe:	84 e4       	ldi	r24, 0x44	; 68
     600:	0e 94 00 05 	call	0xa00	; 0xa00 <DIO_write>
     604:	41 e0       	ldi	r20, 0x01	; 1
     606:	62 e0       	ldi	r22, 0x02	; 2
     608:	84 e4       	ldi	r24, 0x44	; 68
     60a:	0e 94 00 05 	call	0xa00	; 0xa00 <DIO_write>
     60e:	41 e0       	ldi	r20, 0x01	; 1
     610:	63 e0       	ldi	r22, 0x03	; 3
     612:	84 e4       	ldi	r24, 0x44	; 68
     614:	0e 94 00 05 	call	0xa00	; 0xa00 <DIO_write>
     618:	40 e0       	ldi	r20, 0x00	; 0
     61a:	6f 2d       	mov	r22, r15
     61c:	84 e4       	ldi	r24, 0x44	; 68
     61e:	0e 94 00 05 	call	0xa00	; 0xa00 <DIO_write>
     622:	10 e0       	ldi	r17, 0x00	; 0
     624:	1a c0       	rjmp	.+52     	; 0x65a <keypad_check_press+0xa0>
     626:	64 e0       	ldi	r22, 0x04	; 4
     628:	61 0f       	add	r22, r17
     62a:	84 e4       	ldi	r24, 0x44	; 68
     62c:	0e 94 70 05 	call	0xae0	; 0xae0 <DIO_u8read>
     630:	08 2f       	mov	r16, r24
     632:	81 11       	cpse	r24, r1
     634:	11 c0       	rjmp	.+34     	; 0x658 <keypad_check_press+0x9e>
     636:	8f 2d       	mov	r24, r15
     638:	90 e0       	ldi	r25, 0x00	; 0
     63a:	fc 01       	movw	r30, r24
     63c:	ee 0f       	add	r30, r30
     63e:	ff 1f       	adc	r31, r31
     640:	e8 0f       	add	r30, r24
     642:	f9 1f       	adc	r31, r25
     644:	81 e0       	ldi	r24, 0x01	; 1
     646:	90 e0       	ldi	r25, 0x00	; 0
     648:	8c 0f       	add	r24, r28
     64a:	9d 1f       	adc	r25, r29
     64c:	e8 0f       	add	r30, r24
     64e:	f9 1f       	adc	r31, r25
     650:	e1 0f       	add	r30, r17
     652:	f1 1d       	adc	r31, r1
     654:	e0 80       	ld	r14, Z
     656:	03 c0       	rjmp	.+6      	; 0x65e <keypad_check_press+0xa4>
     658:	1f 5f       	subi	r17, 0xFF	; 255
     65a:	13 30       	cpi	r17, 0x03	; 3
     65c:	20 f3       	brcs	.-56     	; 0x626 <keypad_check_press+0x6c>
     65e:	00 23       	and	r16, r16
     660:	21 f0       	breq	.+8      	; 0x66a <keypad_check_press+0xb0>
     662:	f3 94       	inc	r15
     664:	93 e0       	ldi	r25, 0x03	; 3
     666:	9f 15       	cp	r25, r15
     668:	18 f6       	brcc	.-122    	; 0x5f0 <keypad_check_press+0x36>
     66a:	8e 2d       	mov	r24, r14
     66c:	2c 96       	adiw	r28, 0x0c	; 12
     66e:	0f b6       	in	r0, 0x3f	; 63
     670:	f8 94       	cli
     672:	de bf       	out	0x3e, r29	; 62
     674:	0f be       	out	0x3f, r0	; 63
     676:	cd bf       	out	0x3d, r28	; 61
     678:	df 91       	pop	r29
     67a:	cf 91       	pop	r28
     67c:	1f 91       	pop	r17
     67e:	0f 91       	pop	r16
     680:	ff 90       	pop	r15
     682:	ef 90       	pop	r14
     684:	08 95       	ret

00000686 <send_falling_edge>:
     686:	41 e0       	ldi	r20, 0x01	; 1
     688:	60 e0       	ldi	r22, 0x00	; 0
     68a:	82 e4       	ldi	r24, 0x42	; 66
     68c:	0e 94 00 05 	call	0xa00	; 0xa00 <DIO_write>
     690:	8f e9       	ldi	r24, 0x9F	; 159
     692:	9f e0       	ldi	r25, 0x0F	; 15
     694:	01 97       	sbiw	r24, 0x01	; 1
     696:	f1 f7       	brne	.-4      	; 0x694 <send_falling_edge+0xe>
     698:	00 c0       	rjmp	.+0      	; 0x69a <send_falling_edge+0x14>
     69a:	00 00       	nop
     69c:	40 e0       	ldi	r20, 0x00	; 0
     69e:	60 e0       	ldi	r22, 0x00	; 0
     6a0:	82 e4       	ldi	r24, 0x42	; 66
     6a2:	0e 94 00 05 	call	0xa00	; 0xa00 <DIO_write>
     6a6:	8f e9       	ldi	r24, 0x9F	; 159
     6a8:	9f e0       	ldi	r25, 0x0F	; 15
     6aa:	01 97       	sbiw	r24, 0x01	; 1
     6ac:	f1 f7       	brne	.-4      	; 0x6aa <send_falling_edge+0x24>
     6ae:	00 c0       	rjmp	.+0      	; 0x6b0 <send_falling_edge+0x2a>
     6b0:	00 00       	nop
     6b2:	08 95       	ret

000006b4 <LCD_vSend_cmd>:
     6b4:	cf 93       	push	r28
     6b6:	c8 2f       	mov	r28, r24
     6b8:	68 2f       	mov	r22, r24
     6ba:	62 95       	swap	r22
     6bc:	6f 70       	andi	r22, 0x0F	; 15
     6be:	81 e4       	ldi	r24, 0x41	; 65
     6c0:	0e 94 3d 06 	call	0xc7a	; 0xc7a <write_high_nibble>
     6c4:	40 e0       	ldi	r20, 0x00	; 0
     6c6:	61 e0       	ldi	r22, 0x01	; 1
     6c8:	82 e4       	ldi	r24, 0x42	; 66
     6ca:	0e 94 00 05 	call	0xa00	; 0xa00 <DIO_write>
     6ce:	0e 94 43 03 	call	0x686	; 0x686 <send_falling_edge>
     6d2:	6c 2f       	mov	r22, r28
     6d4:	81 e4       	ldi	r24, 0x41	; 65
     6d6:	0e 94 3d 06 	call	0xc7a	; 0xc7a <write_high_nibble>
     6da:	40 e0       	ldi	r20, 0x00	; 0
     6dc:	61 e0       	ldi	r22, 0x01	; 1
     6de:	82 e4       	ldi	r24, 0x42	; 66
     6e0:	0e 94 00 05 	call	0xa00	; 0xa00 <DIO_write>
     6e4:	0e 94 43 03 	call	0x686	; 0x686 <send_falling_edge>
     6e8:	8f ec       	ldi	r24, 0xCF	; 207
     6ea:	97 e0       	ldi	r25, 0x07	; 7
     6ec:	01 97       	sbiw	r24, 0x01	; 1
     6ee:	f1 f7       	brne	.-4      	; 0x6ec <LCD_vSend_cmd+0x38>
     6f0:	00 c0       	rjmp	.+0      	; 0x6f2 <LCD_vSend_cmd+0x3e>
     6f2:	00 00       	nop
     6f4:	cf 91       	pop	r28
     6f6:	08 95       	ret

000006f8 <LCD_intialize>:
     6f8:	41 e0       	ldi	r20, 0x01	; 1
     6fa:	64 e0       	ldi	r22, 0x04	; 4
     6fc:	81 e4       	ldi	r24, 0x41	; 65
     6fe:	0e 94 90 04 	call	0x920	; 0x920 <DIO_vsetPINDir>
     702:	41 e0       	ldi	r20, 0x01	; 1
     704:	65 e0       	ldi	r22, 0x05	; 5
     706:	81 e4       	ldi	r24, 0x41	; 65
     708:	0e 94 90 04 	call	0x920	; 0x920 <DIO_vsetPINDir>
     70c:	41 e0       	ldi	r20, 0x01	; 1
     70e:	66 e0       	ldi	r22, 0x06	; 6
     710:	81 e4       	ldi	r24, 0x41	; 65
     712:	0e 94 90 04 	call	0x920	; 0x920 <DIO_vsetPINDir>
     716:	41 e0       	ldi	r20, 0x01	; 1
     718:	67 e0       	ldi	r22, 0x07	; 7
     71a:	81 e4       	ldi	r24, 0x41	; 65
     71c:	0e 94 90 04 	call	0x920	; 0x920 <DIO_vsetPINDir>
     720:	41 e0       	ldi	r20, 0x01	; 1
     722:	60 e0       	ldi	r22, 0x00	; 0
     724:	82 e4       	ldi	r24, 0x42	; 66
     726:	0e 94 90 04 	call	0x920	; 0x920 <DIO_vsetPINDir>
     72a:	41 e0       	ldi	r20, 0x01	; 1
     72c:	62 e0       	ldi	r22, 0x02	; 2
     72e:	82 e4       	ldi	r24, 0x42	; 66
     730:	0e 94 90 04 	call	0x920	; 0x920 <DIO_vsetPINDir>
     734:	41 e0       	ldi	r20, 0x01	; 1
     736:	61 e0       	ldi	r22, 0x01	; 1
     738:	82 e4       	ldi	r24, 0x42	; 66
     73a:	0e 94 90 04 	call	0x920	; 0x920 <DIO_vsetPINDir>
     73e:	40 e0       	ldi	r20, 0x00	; 0
     740:	62 e0       	ldi	r22, 0x02	; 2
     742:	82 e4       	ldi	r24, 0x42	; 66
     744:	0e 94 00 05 	call	0xa00	; 0xa00 <DIO_write>
     748:	82 e0       	ldi	r24, 0x02	; 2
     74a:	0e 94 5a 03 	call	0x6b4	; 0x6b4 <LCD_vSend_cmd>
     74e:	8f e1       	ldi	r24, 0x1F	; 31
     750:	9e e4       	ldi	r25, 0x4E	; 78
     752:	01 97       	sbiw	r24, 0x01	; 1
     754:	f1 f7       	brne	.-4      	; 0x752 <LCD_intialize+0x5a>
     756:	00 c0       	rjmp	.+0      	; 0x758 <LCD_intialize+0x60>
     758:	00 00       	nop
     75a:	88 e2       	ldi	r24, 0x28	; 40
     75c:	0e 94 5a 03 	call	0x6b4	; 0x6b4 <LCD_vSend_cmd>
     760:	8f ec       	ldi	r24, 0xCF	; 207
     762:	97 e0       	ldi	r25, 0x07	; 7
     764:	01 97       	sbiw	r24, 0x01	; 1
     766:	f1 f7       	brne	.-4      	; 0x764 <LCD_intialize+0x6c>
     768:	00 c0       	rjmp	.+0      	; 0x76a <LCD_intialize+0x72>
     76a:	00 00       	nop
     76c:	8e e0       	ldi	r24, 0x0E	; 14
     76e:	0e 94 5a 03 	call	0x6b4	; 0x6b4 <LCD_vSend_cmd>
     772:	8f ec       	ldi	r24, 0xCF	; 207
     774:	97 e0       	ldi	r25, 0x07	; 7
     776:	01 97       	sbiw	r24, 0x01	; 1
     778:	f1 f7       	brne	.-4      	; 0x776 <LCD_intialize+0x7e>
     77a:	00 c0       	rjmp	.+0      	; 0x77c <LCD_intialize+0x84>
     77c:	00 00       	nop
     77e:	81 e0       	ldi	r24, 0x01	; 1
     780:	0e 94 5a 03 	call	0x6b4	; 0x6b4 <LCD_vSend_cmd>
     784:	8f e1       	ldi	r24, 0x1F	; 31
     786:	9e e4       	ldi	r25, 0x4E	; 78
     788:	01 97       	sbiw	r24, 0x01	; 1
     78a:	f1 f7       	brne	.-4      	; 0x788 <LCD_intialize+0x90>
     78c:	00 c0       	rjmp	.+0      	; 0x78e <LCD_intialize+0x96>
     78e:	00 00       	nop
     790:	86 e0       	ldi	r24, 0x06	; 6
     792:	0e 94 5a 03 	call	0x6b4	; 0x6b4 <LCD_vSend_cmd>
     796:	8f ec       	ldi	r24, 0xCF	; 207
     798:	97 e0       	ldi	r25, 0x07	; 7
     79a:	01 97       	sbiw	r24, 0x01	; 1
     79c:	f1 f7       	brne	.-4      	; 0x79a <LCD_intialize+0xa2>
     79e:	00 c0       	rjmp	.+0      	; 0x7a0 <LCD_intialize+0xa8>
     7a0:	00 00       	nop
     7a2:	08 95       	ret

000007a4 <LCD_vSend_char>:
     7a4:	cf 93       	push	r28
     7a6:	c8 2f       	mov	r28, r24
     7a8:	68 2f       	mov	r22, r24
     7aa:	62 95       	swap	r22
     7ac:	6f 70       	andi	r22, 0x0F	; 15
     7ae:	81 e4       	ldi	r24, 0x41	; 65
     7b0:	0e 94 3d 06 	call	0xc7a	; 0xc7a <write_high_nibble>
     7b4:	41 e0       	ldi	r20, 0x01	; 1
     7b6:	61 e0       	ldi	r22, 0x01	; 1
     7b8:	82 e4       	ldi	r24, 0x42	; 66
     7ba:	0e 94 00 05 	call	0xa00	; 0xa00 <DIO_write>
     7be:	0e 94 43 03 	call	0x686	; 0x686 <send_falling_edge>
     7c2:	6c 2f       	mov	r22, r28
     7c4:	81 e4       	ldi	r24, 0x41	; 65
     7c6:	0e 94 3d 06 	call	0xc7a	; 0xc7a <write_high_nibble>
     7ca:	41 e0       	ldi	r20, 0x01	; 1
     7cc:	61 e0       	ldi	r22, 0x01	; 1
     7ce:	82 e4       	ldi	r24, 0x42	; 66
     7d0:	0e 94 00 05 	call	0xa00	; 0xa00 <DIO_write>
     7d4:	0e 94 43 03 	call	0x686	; 0x686 <send_falling_edge>
     7d8:	8f ec       	ldi	r24, 0xCF	; 207
     7da:	97 e0       	ldi	r25, 0x07	; 7
     7dc:	01 97       	sbiw	r24, 0x01	; 1
     7de:	f1 f7       	brne	.-4      	; 0x7dc <LCD_vSend_char+0x38>
     7e0:	00 c0       	rjmp	.+0      	; 0x7e2 <LCD_vSend_char+0x3e>
     7e2:	00 00       	nop
     7e4:	cf 91       	pop	r28
     7e6:	08 95       	ret

000007e8 <LCD_vSend_string>:
     7e8:	cf 93       	push	r28
     7ea:	df 93       	push	r29
     7ec:	ec 01       	movw	r28, r24
     7ee:	03 c0       	rjmp	.+6      	; 0x7f6 <LCD_vSend_string+0xe>
     7f0:	0e 94 d2 03 	call	0x7a4	; 0x7a4 <LCD_vSend_char>
     7f4:	21 96       	adiw	r28, 0x01	; 1
     7f6:	88 81       	ld	r24, Y
     7f8:	81 11       	cpse	r24, r1
     7fa:	fa cf       	rjmp	.-12     	; 0x7f0 <LCD_vSend_string+0x8>
     7fc:	df 91       	pop	r29
     7fe:	cf 91       	pop	r28
     800:	08 95       	ret

00000802 <LCD_clearscreen>:
     802:	81 e0       	ldi	r24, 0x01	; 1
     804:	0e 94 5a 03 	call	0x6b4	; 0x6b4 <LCD_vSend_cmd>
     808:	8f e1       	ldi	r24, 0x1F	; 31
     80a:	9e e4       	ldi	r25, 0x4E	; 78
     80c:	01 97       	sbiw	r24, 0x01	; 1
     80e:	f1 f7       	brne	.-4      	; 0x80c <LCD_clearscreen+0xa>
     810:	00 c0       	rjmp	.+0      	; 0x812 <LCD_clearscreen+0x10>
     812:	00 00       	nop
     814:	08 95       	ret

00000816 <LCD_GoToPos>:
     816:	82 30       	cpi	r24, 0x02	; 2
     818:	50 f4       	brcc	.+20     	; 0x82e <LCD_GoToPos+0x18>
     81a:	60 31       	cpi	r22, 0x10	; 16
     81c:	40 f4       	brcc	.+16     	; 0x82e <LCD_GoToPos+0x18>
     81e:	90 e4       	ldi	r25, 0x40	; 64
     820:	89 9f       	mul	r24, r25
     822:	60 0d       	add	r22, r0
     824:	11 24       	eor	r1, r1
     826:	86 2f       	mov	r24, r22
     828:	80 68       	ori	r24, 0x80	; 128
     82a:	0e 94 5a 03 	call	0x6b4	; 0x6b4 <LCD_vSend_cmd>
     82e:	08 95       	ret

00000830 <LCD_WriteString>:
     830:	ef 92       	push	r14
     832:	ff 92       	push	r15
     834:	0f 93       	push	r16
     836:	1f 93       	push	r17
     838:	cf 93       	push	r28
     83a:	df 93       	push	r29
     83c:	8c 01       	movw	r16, r24
     83e:	d6 2f       	mov	r29, r22
     840:	f4 2e       	mov	r15, r20
     842:	64 2f       	mov	r22, r20
     844:	8d 2f       	mov	r24, r29
     846:	0e 94 0b 04 	call	0x816	; 0x816 <LCD_GoToPos>
     84a:	e1 2c       	mov	r14, r1
     84c:	c0 e0       	ldi	r28, 0x00	; 0
     84e:	1b c0       	rjmp	.+54     	; 0x886 <__stack+0x27>
     850:	20 31       	cpi	r18, 0x10	; 16
     852:	31 05       	cpc	r19, r1
     854:	24 f4       	brge	.+8      	; 0x85e <LCD_WriteString+0x2e>
     856:	0e 94 d2 03 	call	0x7a4	; 0x7a4 <LCD_vSend_char>
     85a:	cf 5f       	subi	r28, 0xFF	; 255
     85c:	14 c0       	rjmp	.+40     	; 0x886 <__stack+0x27>
     85e:	20 31       	cpi	r18, 0x10	; 16
     860:	31 05       	cpc	r19, r1
     862:	41 f4       	brne	.+16     	; 0x874 <__stack+0x15>
     864:	e1 10       	cpse	r14, r1
     866:	06 c0       	rjmp	.+12     	; 0x874 <__stack+0x15>
     868:	60 e0       	ldi	r22, 0x00	; 0
     86a:	81 e0       	ldi	r24, 0x01	; 1
     86c:	0e 94 0b 04 	call	0x816	; 0x816 <LCD_GoToPos>
     870:	e3 94       	inc	r14
     872:	09 c0       	rjmp	.+18     	; 0x886 <__stack+0x27>
     874:	20 32       	cpi	r18, 0x20	; 32
     876:	31 05       	cpc	r19, r1
     878:	34 f4       	brge	.+12     	; 0x886 <__stack+0x27>
     87a:	91 e0       	ldi	r25, 0x01	; 1
     87c:	e9 12       	cpse	r14, r25
     87e:	03 c0       	rjmp	.+6      	; 0x886 <__stack+0x27>
     880:	0e 94 d2 03 	call	0x7a4	; 0x7a4 <LCD_vSend_char>
     884:	cf 5f       	subi	r28, 0xFF	; 255
     886:	f8 01       	movw	r30, r16
     888:	ec 0f       	add	r30, r28
     88a:	f1 1d       	adc	r31, r1
     88c:	80 81       	ld	r24, Z
     88e:	88 23       	and	r24, r24
     890:	61 f0       	breq	.+24     	; 0x8aa <__stack+0x4b>
     892:	2f 2d       	mov	r18, r15
     894:	30 e0       	ldi	r19, 0x00	; 0
     896:	2c 0f       	add	r18, r28
     898:	31 1d       	adc	r19, r1
     89a:	90 e1       	ldi	r25, 0x10	; 16
     89c:	d9 9f       	mul	r29, r25
     89e:	20 0d       	add	r18, r0
     8a0:	31 1d       	adc	r19, r1
     8a2:	11 24       	eor	r1, r1
     8a4:	20 32       	cpi	r18, 0x20	; 32
     8a6:	31 05       	cpc	r19, r1
     8a8:	9c f2       	brlt	.-90     	; 0x850 <LCD_WriteString+0x20>
     8aa:	df 91       	pop	r29
     8ac:	cf 91       	pop	r28
     8ae:	1f 91       	pop	r17
     8b0:	0f 91       	pop	r16
     8b2:	ff 90       	pop	r15
     8b4:	ef 90       	pop	r14
     8b6:	08 95       	ret

000008b8 <tc72Init>:
     8b8:	41 e0       	ldi	r20, 0x01	; 1
     8ba:	64 e0       	ldi	r22, 0x04	; 4
     8bc:	82 e4       	ldi	r24, 0x42	; 66
     8be:	0e 94 00 05 	call	0xa00	; 0xa00 <DIO_write>
     8c2:	80 e8       	ldi	r24, 0x80	; 128
     8c4:	90 e0       	ldi	r25, 0x00	; 0
     8c6:	0e 94 70 06 	call	0xce0	; 0xce0 <masterTransmit>
     8ca:	84 e0       	ldi	r24, 0x04	; 4
     8cc:	90 e0       	ldi	r25, 0x00	; 0
     8ce:	0e 94 70 06 	call	0xce0	; 0xce0 <masterTransmit>
     8d2:	40 e0       	ldi	r20, 0x00	; 0
     8d4:	64 e0       	ldi	r22, 0x04	; 4
     8d6:	82 e4       	ldi	r24, 0x42	; 66
     8d8:	0e 94 00 05 	call	0xa00	; 0xa00 <DIO_write>
     8dc:	8f e2       	ldi	r24, 0x2F	; 47
     8de:	95 e7       	ldi	r25, 0x75	; 117
     8e0:	01 97       	sbiw	r24, 0x01	; 1
     8e2:	f1 f7       	brne	.-4      	; 0x8e0 <tc72Init+0x28>
     8e4:	00 c0       	rjmp	.+0      	; 0x8e6 <tc72Init+0x2e>
     8e6:	00 00       	nop
     8e8:	08 95       	ret

000008ea <ADC_Init>:
     8ea:	1a ba       	out	0x1a, r1	; 26
     8ec:	87 e8       	ldi	r24, 0x87	; 135
     8ee:	86 b9       	out	0x06, r24	; 6
     8f0:	80 e4       	ldi	r24, 0x40	; 64
     8f2:	87 b9       	out	0x07, r24	; 7
     8f4:	08 95       	ret

000008f6 <ADC_Read>:
     8f6:	97 b1       	in	r25, 0x07	; 7
     8f8:	8f 70       	andi	r24, 0x0F	; 15
     8fa:	98 2b       	or	r25, r24
     8fc:	97 b9       	out	0x07, r25	; 7
     8fe:	86 b1       	in	r24, 0x06	; 6
     900:	80 64       	ori	r24, 0x40	; 64
     902:	86 b9       	out	0x06, r24	; 6
     904:	34 9b       	sbis	0x06, 4	; 6
     906:	fe cf       	rjmp	.-4      	; 0x904 <ADC_Read+0xe>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     908:	82 e0       	ldi	r24, 0x02	; 2
     90a:	8a 95       	dec	r24
     90c:	f1 f7       	brne	.-4      	; 0x90a <ADC_Read+0x14>
     90e:	00 c0       	rjmp	.+0      	; 0x910 <ADC_Read+0x1a>
     910:	24 b1       	in	r18, 0x04	; 4
     912:	85 b1       	in	r24, 0x05	; 5
     914:	90 e0       	ldi	r25, 0x00	; 0
     916:	98 2f       	mov	r25, r24
     918:	88 27       	eor	r24, r24
     91a:	82 0f       	add	r24, r18
     91c:	91 1d       	adc	r25, r1
     91e:	08 95       	ret

00000920 <DIO_vsetPINDir>:
     920:	82 34       	cpi	r24, 0x42	; 66
     922:	19 f1       	breq	.+70     	; 0x96a <DIO_vsetPINDir+0x4a>
     924:	18 f4       	brcc	.+6      	; 0x92c <DIO_vsetPINDir+0xc>
     926:	81 34       	cpi	r24, 0x41	; 65
     928:	39 f0       	breq	.+14     	; 0x938 <DIO_vsetPINDir+0x18>
     92a:	08 95       	ret
     92c:	83 34       	cpi	r24, 0x43	; 67
     92e:	b1 f1       	breq	.+108    	; 0x99c <DIO_vsetPINDir+0x7c>
     930:	84 34       	cpi	r24, 0x44	; 68
     932:	09 f4       	brne	.+2      	; 0x936 <DIO_vsetPINDir+0x16>
     934:	4c c0       	rjmp	.+152    	; 0x9ce <DIO_vsetPINDir+0xae>
     936:	08 95       	ret
     938:	41 30       	cpi	r20, 0x01	; 1
     93a:	59 f4       	brne	.+22     	; 0x952 <DIO_vsetPINDir+0x32>
     93c:	2a b3       	in	r18, 0x1a	; 26
     93e:	81 e0       	ldi	r24, 0x01	; 1
     940:	90 e0       	ldi	r25, 0x00	; 0
     942:	02 c0       	rjmp	.+4      	; 0x948 <DIO_vsetPINDir+0x28>
     944:	88 0f       	add	r24, r24
     946:	99 1f       	adc	r25, r25
     948:	6a 95       	dec	r22
     94a:	e2 f7       	brpl	.-8      	; 0x944 <DIO_vsetPINDir+0x24>
     94c:	82 2b       	or	r24, r18
     94e:	8a bb       	out	0x1a, r24	; 26
     950:	08 95       	ret
     952:	2a b3       	in	r18, 0x1a	; 26
     954:	81 e0       	ldi	r24, 0x01	; 1
     956:	90 e0       	ldi	r25, 0x00	; 0
     958:	02 c0       	rjmp	.+4      	; 0x95e <DIO_vsetPINDir+0x3e>
     95a:	88 0f       	add	r24, r24
     95c:	99 1f       	adc	r25, r25
     95e:	6a 95       	dec	r22
     960:	e2 f7       	brpl	.-8      	; 0x95a <DIO_vsetPINDir+0x3a>
     962:	80 95       	com	r24
     964:	82 23       	and	r24, r18
     966:	8a bb       	out	0x1a, r24	; 26
     968:	08 95       	ret
     96a:	41 30       	cpi	r20, 0x01	; 1
     96c:	59 f4       	brne	.+22     	; 0x984 <DIO_vsetPINDir+0x64>
     96e:	27 b3       	in	r18, 0x17	; 23
     970:	81 e0       	ldi	r24, 0x01	; 1
     972:	90 e0       	ldi	r25, 0x00	; 0
     974:	02 c0       	rjmp	.+4      	; 0x97a <DIO_vsetPINDir+0x5a>
     976:	88 0f       	add	r24, r24
     978:	99 1f       	adc	r25, r25
     97a:	6a 95       	dec	r22
     97c:	e2 f7       	brpl	.-8      	; 0x976 <DIO_vsetPINDir+0x56>
     97e:	82 2b       	or	r24, r18
     980:	87 bb       	out	0x17, r24	; 23
     982:	08 95       	ret
     984:	27 b3       	in	r18, 0x17	; 23
     986:	81 e0       	ldi	r24, 0x01	; 1
     988:	90 e0       	ldi	r25, 0x00	; 0
     98a:	02 c0       	rjmp	.+4      	; 0x990 <DIO_vsetPINDir+0x70>
     98c:	88 0f       	add	r24, r24
     98e:	99 1f       	adc	r25, r25
     990:	6a 95       	dec	r22
     992:	e2 f7       	brpl	.-8      	; 0x98c <DIO_vsetPINDir+0x6c>
     994:	80 95       	com	r24
     996:	82 23       	and	r24, r18
     998:	87 bb       	out	0x17, r24	; 23
     99a:	08 95       	ret
     99c:	41 30       	cpi	r20, 0x01	; 1
     99e:	59 f4       	brne	.+22     	; 0x9b6 <DIO_vsetPINDir+0x96>
     9a0:	24 b3       	in	r18, 0x14	; 20
     9a2:	81 e0       	ldi	r24, 0x01	; 1
     9a4:	90 e0       	ldi	r25, 0x00	; 0
     9a6:	02 c0       	rjmp	.+4      	; 0x9ac <DIO_vsetPINDir+0x8c>
     9a8:	88 0f       	add	r24, r24
     9aa:	99 1f       	adc	r25, r25
     9ac:	6a 95       	dec	r22
     9ae:	e2 f7       	brpl	.-8      	; 0x9a8 <DIO_vsetPINDir+0x88>
     9b0:	82 2b       	or	r24, r18
     9b2:	84 bb       	out	0x14, r24	; 20
     9b4:	08 95       	ret
     9b6:	24 b3       	in	r18, 0x14	; 20
     9b8:	81 e0       	ldi	r24, 0x01	; 1
     9ba:	90 e0       	ldi	r25, 0x00	; 0
     9bc:	02 c0       	rjmp	.+4      	; 0x9c2 <DIO_vsetPINDir+0xa2>
     9be:	88 0f       	add	r24, r24
     9c0:	99 1f       	adc	r25, r25
     9c2:	6a 95       	dec	r22
     9c4:	e2 f7       	brpl	.-8      	; 0x9be <DIO_vsetPINDir+0x9e>
     9c6:	80 95       	com	r24
     9c8:	82 23       	and	r24, r18
     9ca:	84 bb       	out	0x14, r24	; 20
     9cc:	08 95       	ret
     9ce:	41 30       	cpi	r20, 0x01	; 1
     9d0:	59 f4       	brne	.+22     	; 0x9e8 <DIO_vsetPINDir+0xc8>
     9d2:	21 b3       	in	r18, 0x11	; 17
     9d4:	81 e0       	ldi	r24, 0x01	; 1
     9d6:	90 e0       	ldi	r25, 0x00	; 0
     9d8:	02 c0       	rjmp	.+4      	; 0x9de <DIO_vsetPINDir+0xbe>
     9da:	88 0f       	add	r24, r24
     9dc:	99 1f       	adc	r25, r25
     9de:	6a 95       	dec	r22
     9e0:	e2 f7       	brpl	.-8      	; 0x9da <DIO_vsetPINDir+0xba>
     9e2:	82 2b       	or	r24, r18
     9e4:	81 bb       	out	0x11, r24	; 17
     9e6:	08 95       	ret
     9e8:	21 b3       	in	r18, 0x11	; 17
     9ea:	81 e0       	ldi	r24, 0x01	; 1
     9ec:	90 e0       	ldi	r25, 0x00	; 0
     9ee:	02 c0       	rjmp	.+4      	; 0x9f4 <DIO_vsetPINDir+0xd4>
     9f0:	88 0f       	add	r24, r24
     9f2:	99 1f       	adc	r25, r25
     9f4:	6a 95       	dec	r22
     9f6:	e2 f7       	brpl	.-8      	; 0x9f0 <DIO_vsetPINDir+0xd0>
     9f8:	80 95       	com	r24
     9fa:	82 23       	and	r24, r18
     9fc:	81 bb       	out	0x11, r24	; 17
     9fe:	08 95       	ret

00000a00 <DIO_write>:
     a00:	82 34       	cpi	r24, 0x42	; 66
     a02:	19 f1       	breq	.+70     	; 0xa4a <DIO_write+0x4a>
     a04:	18 f4       	brcc	.+6      	; 0xa0c <DIO_write+0xc>
     a06:	81 34       	cpi	r24, 0x41	; 65
     a08:	39 f0       	breq	.+14     	; 0xa18 <DIO_write+0x18>
     a0a:	08 95       	ret
     a0c:	83 34       	cpi	r24, 0x43	; 67
     a0e:	b1 f1       	breq	.+108    	; 0xa7c <DIO_write+0x7c>
     a10:	84 34       	cpi	r24, 0x44	; 68
     a12:	09 f4       	brne	.+2      	; 0xa16 <DIO_write+0x16>
     a14:	4c c0       	rjmp	.+152    	; 0xaae <DIO_write+0xae>
     a16:	08 95       	ret
     a18:	41 30       	cpi	r20, 0x01	; 1
     a1a:	59 f4       	brne	.+22     	; 0xa32 <DIO_write+0x32>
     a1c:	2b b3       	in	r18, 0x1b	; 27
     a1e:	81 e0       	ldi	r24, 0x01	; 1
     a20:	90 e0       	ldi	r25, 0x00	; 0
     a22:	02 c0       	rjmp	.+4      	; 0xa28 <DIO_write+0x28>
     a24:	88 0f       	add	r24, r24
     a26:	99 1f       	adc	r25, r25
     a28:	6a 95       	dec	r22
     a2a:	e2 f7       	brpl	.-8      	; 0xa24 <DIO_write+0x24>
     a2c:	82 2b       	or	r24, r18
     a2e:	8b bb       	out	0x1b, r24	; 27
     a30:	08 95       	ret
     a32:	2b b3       	in	r18, 0x1b	; 27
     a34:	81 e0       	ldi	r24, 0x01	; 1
     a36:	90 e0       	ldi	r25, 0x00	; 0
     a38:	02 c0       	rjmp	.+4      	; 0xa3e <DIO_write+0x3e>
     a3a:	88 0f       	add	r24, r24
     a3c:	99 1f       	adc	r25, r25
     a3e:	6a 95       	dec	r22
     a40:	e2 f7       	brpl	.-8      	; 0xa3a <DIO_write+0x3a>
     a42:	80 95       	com	r24
     a44:	82 23       	and	r24, r18
     a46:	8b bb       	out	0x1b, r24	; 27
     a48:	08 95       	ret
     a4a:	41 30       	cpi	r20, 0x01	; 1
     a4c:	59 f4       	brne	.+22     	; 0xa64 <DIO_write+0x64>
     a4e:	28 b3       	in	r18, 0x18	; 24
     a50:	81 e0       	ldi	r24, 0x01	; 1
     a52:	90 e0       	ldi	r25, 0x00	; 0
     a54:	02 c0       	rjmp	.+4      	; 0xa5a <DIO_write+0x5a>
     a56:	88 0f       	add	r24, r24
     a58:	99 1f       	adc	r25, r25
     a5a:	6a 95       	dec	r22
     a5c:	e2 f7       	brpl	.-8      	; 0xa56 <DIO_write+0x56>
     a5e:	82 2b       	or	r24, r18
     a60:	88 bb       	out	0x18, r24	; 24
     a62:	08 95       	ret
     a64:	28 b3       	in	r18, 0x18	; 24
     a66:	81 e0       	ldi	r24, 0x01	; 1
     a68:	90 e0       	ldi	r25, 0x00	; 0
     a6a:	02 c0       	rjmp	.+4      	; 0xa70 <DIO_write+0x70>
     a6c:	88 0f       	add	r24, r24
     a6e:	99 1f       	adc	r25, r25
     a70:	6a 95       	dec	r22
     a72:	e2 f7       	brpl	.-8      	; 0xa6c <DIO_write+0x6c>
     a74:	80 95       	com	r24
     a76:	82 23       	and	r24, r18
     a78:	88 bb       	out	0x18, r24	; 24
     a7a:	08 95       	ret
     a7c:	41 30       	cpi	r20, 0x01	; 1
     a7e:	59 f4       	brne	.+22     	; 0xa96 <DIO_write+0x96>
     a80:	25 b3       	in	r18, 0x15	; 21
     a82:	81 e0       	ldi	r24, 0x01	; 1
     a84:	90 e0       	ldi	r25, 0x00	; 0
     a86:	02 c0       	rjmp	.+4      	; 0xa8c <DIO_write+0x8c>
     a88:	88 0f       	add	r24, r24
     a8a:	99 1f       	adc	r25, r25
     a8c:	6a 95       	dec	r22
     a8e:	e2 f7       	brpl	.-8      	; 0xa88 <DIO_write+0x88>
     a90:	82 2b       	or	r24, r18
     a92:	85 bb       	out	0x15, r24	; 21
     a94:	08 95       	ret
     a96:	25 b3       	in	r18, 0x15	; 21
     a98:	81 e0       	ldi	r24, 0x01	; 1
     a9a:	90 e0       	ldi	r25, 0x00	; 0
     a9c:	02 c0       	rjmp	.+4      	; 0xaa2 <DIO_write+0xa2>
     a9e:	88 0f       	add	r24, r24
     aa0:	99 1f       	adc	r25, r25
     aa2:	6a 95       	dec	r22
     aa4:	e2 f7       	brpl	.-8      	; 0xa9e <DIO_write+0x9e>
     aa6:	80 95       	com	r24
     aa8:	82 23       	and	r24, r18
     aaa:	85 bb       	out	0x15, r24	; 21
     aac:	08 95       	ret
     aae:	41 30       	cpi	r20, 0x01	; 1
     ab0:	59 f4       	brne	.+22     	; 0xac8 <DIO_write+0xc8>
     ab2:	22 b3       	in	r18, 0x12	; 18
     ab4:	81 e0       	ldi	r24, 0x01	; 1
     ab6:	90 e0       	ldi	r25, 0x00	; 0
     ab8:	02 c0       	rjmp	.+4      	; 0xabe <DIO_write+0xbe>
     aba:	88 0f       	add	r24, r24
     abc:	99 1f       	adc	r25, r25
     abe:	6a 95       	dec	r22
     ac0:	e2 f7       	brpl	.-8      	; 0xaba <DIO_write+0xba>
     ac2:	82 2b       	or	r24, r18
     ac4:	82 bb       	out	0x12, r24	; 18
     ac6:	08 95       	ret
     ac8:	22 b3       	in	r18, 0x12	; 18
     aca:	81 e0       	ldi	r24, 0x01	; 1
     acc:	90 e0       	ldi	r25, 0x00	; 0
     ace:	02 c0       	rjmp	.+4      	; 0xad4 <DIO_write+0xd4>
     ad0:	88 0f       	add	r24, r24
     ad2:	99 1f       	adc	r25, r25
     ad4:	6a 95       	dec	r22
     ad6:	e2 f7       	brpl	.-8      	; 0xad0 <DIO_write+0xd0>
     ad8:	80 95       	com	r24
     ada:	82 23       	and	r24, r18
     adc:	82 bb       	out	0x12, r24	; 18
     ade:	08 95       	ret

00000ae0 <DIO_u8read>:
     ae0:	82 34       	cpi	r24, 0x42	; 66
     ae2:	e9 f0       	breq	.+58     	; 0xb1e <DIO_u8read+0x3e>
     ae4:	18 f4       	brcc	.+6      	; 0xaec <DIO_u8read+0xc>
     ae6:	81 34       	cpi	r24, 0x41	; 65
     ae8:	31 f0       	breq	.+12     	; 0xaf6 <DIO_u8read+0x16>
     aea:	55 c0       	rjmp	.+170    	; 0xb96 <DIO_u8read+0xb6>
     aec:	83 34       	cpi	r24, 0x43	; 67
     aee:	59 f1       	breq	.+86     	; 0xb46 <DIO_u8read+0x66>
     af0:	84 34       	cpi	r24, 0x44	; 68
     af2:	e9 f1       	breq	.+122    	; 0xb6e <DIO_u8read+0x8e>
     af4:	50 c0       	rjmp	.+160    	; 0xb96 <DIO_u8read+0xb6>
     af6:	49 b3       	in	r20, 0x19	; 25
     af8:	81 e0       	ldi	r24, 0x01	; 1
     afa:	90 e0       	ldi	r25, 0x00	; 0
     afc:	9c 01       	movw	r18, r24
     afe:	06 2e       	mov	r0, r22
     b00:	02 c0       	rjmp	.+4      	; 0xb06 <DIO_u8read+0x26>
     b02:	22 0f       	add	r18, r18
     b04:	33 1f       	adc	r19, r19
     b06:	0a 94       	dec	r0
     b08:	e2 f7       	brpl	.-8      	; 0xb02 <DIO_u8read+0x22>
     b0a:	84 2f       	mov	r24, r20
     b0c:	90 e0       	ldi	r25, 0x00	; 0
     b0e:	82 23       	and	r24, r18
     b10:	93 23       	and	r25, r19
     b12:	02 c0       	rjmp	.+4      	; 0xb18 <DIO_u8read+0x38>
     b14:	95 95       	asr	r25
     b16:	87 95       	ror	r24
     b18:	6a 95       	dec	r22
     b1a:	e2 f7       	brpl	.-8      	; 0xb14 <DIO_u8read+0x34>
     b1c:	08 95       	ret
     b1e:	46 b3       	in	r20, 0x16	; 22
     b20:	81 e0       	ldi	r24, 0x01	; 1
     b22:	90 e0       	ldi	r25, 0x00	; 0
     b24:	9c 01       	movw	r18, r24
     b26:	06 2e       	mov	r0, r22
     b28:	02 c0       	rjmp	.+4      	; 0xb2e <DIO_u8read+0x4e>
     b2a:	22 0f       	add	r18, r18
     b2c:	33 1f       	adc	r19, r19
     b2e:	0a 94       	dec	r0
     b30:	e2 f7       	brpl	.-8      	; 0xb2a <DIO_u8read+0x4a>
     b32:	84 2f       	mov	r24, r20
     b34:	90 e0       	ldi	r25, 0x00	; 0
     b36:	82 23       	and	r24, r18
     b38:	93 23       	and	r25, r19
     b3a:	02 c0       	rjmp	.+4      	; 0xb40 <DIO_u8read+0x60>
     b3c:	95 95       	asr	r25
     b3e:	87 95       	ror	r24
     b40:	6a 95       	dec	r22
     b42:	e2 f7       	brpl	.-8      	; 0xb3c <DIO_u8read+0x5c>
     b44:	08 95       	ret
     b46:	43 b3       	in	r20, 0x13	; 19
     b48:	81 e0       	ldi	r24, 0x01	; 1
     b4a:	90 e0       	ldi	r25, 0x00	; 0
     b4c:	9c 01       	movw	r18, r24
     b4e:	06 2e       	mov	r0, r22
     b50:	02 c0       	rjmp	.+4      	; 0xb56 <DIO_u8read+0x76>
     b52:	22 0f       	add	r18, r18
     b54:	33 1f       	adc	r19, r19
     b56:	0a 94       	dec	r0
     b58:	e2 f7       	brpl	.-8      	; 0xb52 <DIO_u8read+0x72>
     b5a:	84 2f       	mov	r24, r20
     b5c:	90 e0       	ldi	r25, 0x00	; 0
     b5e:	82 23       	and	r24, r18
     b60:	93 23       	and	r25, r19
     b62:	02 c0       	rjmp	.+4      	; 0xb68 <DIO_u8read+0x88>
     b64:	95 95       	asr	r25
     b66:	87 95       	ror	r24
     b68:	6a 95       	dec	r22
     b6a:	e2 f7       	brpl	.-8      	; 0xb64 <DIO_u8read+0x84>
     b6c:	08 95       	ret
     b6e:	40 b3       	in	r20, 0x10	; 16
     b70:	81 e0       	ldi	r24, 0x01	; 1
     b72:	90 e0       	ldi	r25, 0x00	; 0
     b74:	9c 01       	movw	r18, r24
     b76:	06 2e       	mov	r0, r22
     b78:	02 c0       	rjmp	.+4      	; 0xb7e <DIO_u8read+0x9e>
     b7a:	22 0f       	add	r18, r18
     b7c:	33 1f       	adc	r19, r19
     b7e:	0a 94       	dec	r0
     b80:	e2 f7       	brpl	.-8      	; 0xb7a <DIO_u8read+0x9a>
     b82:	84 2f       	mov	r24, r20
     b84:	90 e0       	ldi	r25, 0x00	; 0
     b86:	82 23       	and	r24, r18
     b88:	93 23       	and	r25, r19
     b8a:	02 c0       	rjmp	.+4      	; 0xb90 <DIO_u8read+0xb0>
     b8c:	95 95       	asr	r25
     b8e:	87 95       	ror	r24
     b90:	6a 95       	dec	r22
     b92:	e2 f7       	brpl	.-8      	; 0xb8c <DIO_u8read+0xac>
     b94:	08 95       	ret
     b96:	80 e0       	ldi	r24, 0x00	; 0
     b98:	08 95       	ret

00000b9a <DIO_vconnectpullup>:
     b9a:	82 34       	cpi	r24, 0x42	; 66
     b9c:	19 f1       	breq	.+70     	; 0xbe4 <DIO_vconnectpullup+0x4a>
     b9e:	18 f4       	brcc	.+6      	; 0xba6 <DIO_vconnectpullup+0xc>
     ba0:	81 34       	cpi	r24, 0x41	; 65
     ba2:	39 f0       	breq	.+14     	; 0xbb2 <DIO_vconnectpullup+0x18>
     ba4:	08 95       	ret
     ba6:	83 34       	cpi	r24, 0x43	; 67
     ba8:	b1 f1       	breq	.+108    	; 0xc16 <DIO_vconnectpullup+0x7c>
     baa:	84 34       	cpi	r24, 0x44	; 68
     bac:	09 f4       	brne	.+2      	; 0xbb0 <DIO_vconnectpullup+0x16>
     bae:	4c c0       	rjmp	.+152    	; 0xc48 <DIO_vconnectpullup+0xae>
     bb0:	08 95       	ret
     bb2:	41 30       	cpi	r20, 0x01	; 1
     bb4:	59 f4       	brne	.+22     	; 0xbcc <DIO_vconnectpullup+0x32>
     bb6:	2b b3       	in	r18, 0x1b	; 27
     bb8:	81 e0       	ldi	r24, 0x01	; 1
     bba:	90 e0       	ldi	r25, 0x00	; 0
     bbc:	02 c0       	rjmp	.+4      	; 0xbc2 <DIO_vconnectpullup+0x28>
     bbe:	88 0f       	add	r24, r24
     bc0:	99 1f       	adc	r25, r25
     bc2:	6a 95       	dec	r22
     bc4:	e2 f7       	brpl	.-8      	; 0xbbe <DIO_vconnectpullup+0x24>
     bc6:	82 2b       	or	r24, r18
     bc8:	8b bb       	out	0x1b, r24	; 27
     bca:	08 95       	ret
     bcc:	2b b3       	in	r18, 0x1b	; 27
     bce:	81 e0       	ldi	r24, 0x01	; 1
     bd0:	90 e0       	ldi	r25, 0x00	; 0
     bd2:	02 c0       	rjmp	.+4      	; 0xbd8 <DIO_vconnectpullup+0x3e>
     bd4:	88 0f       	add	r24, r24
     bd6:	99 1f       	adc	r25, r25
     bd8:	6a 95       	dec	r22
     bda:	e2 f7       	brpl	.-8      	; 0xbd4 <DIO_vconnectpullup+0x3a>
     bdc:	80 95       	com	r24
     bde:	82 23       	and	r24, r18
     be0:	8b bb       	out	0x1b, r24	; 27
     be2:	08 95       	ret
     be4:	41 30       	cpi	r20, 0x01	; 1
     be6:	59 f4       	brne	.+22     	; 0xbfe <DIO_vconnectpullup+0x64>
     be8:	28 b3       	in	r18, 0x18	; 24
     bea:	81 e0       	ldi	r24, 0x01	; 1
     bec:	90 e0       	ldi	r25, 0x00	; 0
     bee:	02 c0       	rjmp	.+4      	; 0xbf4 <DIO_vconnectpullup+0x5a>
     bf0:	88 0f       	add	r24, r24
     bf2:	99 1f       	adc	r25, r25
     bf4:	6a 95       	dec	r22
     bf6:	e2 f7       	brpl	.-8      	; 0xbf0 <DIO_vconnectpullup+0x56>
     bf8:	82 2b       	or	r24, r18
     bfa:	88 bb       	out	0x18, r24	; 24
     bfc:	08 95       	ret
     bfe:	28 b3       	in	r18, 0x18	; 24
     c00:	81 e0       	ldi	r24, 0x01	; 1
     c02:	90 e0       	ldi	r25, 0x00	; 0
     c04:	02 c0       	rjmp	.+4      	; 0xc0a <DIO_vconnectpullup+0x70>
     c06:	88 0f       	add	r24, r24
     c08:	99 1f       	adc	r25, r25
     c0a:	6a 95       	dec	r22
     c0c:	e2 f7       	brpl	.-8      	; 0xc06 <DIO_vconnectpullup+0x6c>
     c0e:	80 95       	com	r24
     c10:	82 23       	and	r24, r18
     c12:	88 bb       	out	0x18, r24	; 24
     c14:	08 95       	ret
     c16:	41 30       	cpi	r20, 0x01	; 1
     c18:	59 f4       	brne	.+22     	; 0xc30 <DIO_vconnectpullup+0x96>
     c1a:	25 b3       	in	r18, 0x15	; 21
     c1c:	81 e0       	ldi	r24, 0x01	; 1
     c1e:	90 e0       	ldi	r25, 0x00	; 0
     c20:	02 c0       	rjmp	.+4      	; 0xc26 <DIO_vconnectpullup+0x8c>
     c22:	88 0f       	add	r24, r24
     c24:	99 1f       	adc	r25, r25
     c26:	6a 95       	dec	r22
     c28:	e2 f7       	brpl	.-8      	; 0xc22 <DIO_vconnectpullup+0x88>
     c2a:	82 2b       	or	r24, r18
     c2c:	85 bb       	out	0x15, r24	; 21
     c2e:	08 95       	ret
     c30:	25 b3       	in	r18, 0x15	; 21
     c32:	81 e0       	ldi	r24, 0x01	; 1
     c34:	90 e0       	ldi	r25, 0x00	; 0
     c36:	02 c0       	rjmp	.+4      	; 0xc3c <DIO_vconnectpullup+0xa2>
     c38:	88 0f       	add	r24, r24
     c3a:	99 1f       	adc	r25, r25
     c3c:	6a 95       	dec	r22
     c3e:	e2 f7       	brpl	.-8      	; 0xc38 <DIO_vconnectpullup+0x9e>
     c40:	80 95       	com	r24
     c42:	82 23       	and	r24, r18
     c44:	85 bb       	out	0x15, r24	; 21
     c46:	08 95       	ret
     c48:	41 30       	cpi	r20, 0x01	; 1
     c4a:	59 f4       	brne	.+22     	; 0xc62 <DIO_vconnectpullup+0xc8>
     c4c:	22 b3       	in	r18, 0x12	; 18
     c4e:	81 e0       	ldi	r24, 0x01	; 1
     c50:	90 e0       	ldi	r25, 0x00	; 0
     c52:	02 c0       	rjmp	.+4      	; 0xc58 <DIO_vconnectpullup+0xbe>
     c54:	88 0f       	add	r24, r24
     c56:	99 1f       	adc	r25, r25
     c58:	6a 95       	dec	r22
     c5a:	e2 f7       	brpl	.-8      	; 0xc54 <DIO_vconnectpullup+0xba>
     c5c:	82 2b       	or	r24, r18
     c5e:	82 bb       	out	0x12, r24	; 18
     c60:	08 95       	ret
     c62:	22 b3       	in	r18, 0x12	; 18
     c64:	81 e0       	ldi	r24, 0x01	; 1
     c66:	90 e0       	ldi	r25, 0x00	; 0
     c68:	02 c0       	rjmp	.+4      	; 0xc6e <DIO_vconnectpullup+0xd4>
     c6a:	88 0f       	add	r24, r24
     c6c:	99 1f       	adc	r25, r25
     c6e:	6a 95       	dec	r22
     c70:	e2 f7       	brpl	.-8      	; 0xc6a <DIO_vconnectpullup+0xd0>
     c72:	80 95       	com	r24
     c74:	82 23       	and	r24, r18
     c76:	82 bb       	out	0x12, r24	; 18
     c78:	08 95       	ret

00000c7a <write_high_nibble>:
     c7a:	62 95       	swap	r22
     c7c:	60 7f       	andi	r22, 0xF0	; 240
     c7e:	82 34       	cpi	r24, 0x42	; 66
     c80:	79 f0       	breq	.+30     	; 0xca0 <write_high_nibble+0x26>
     c82:	18 f4       	brcc	.+6      	; 0xc8a <write_high_nibble+0x10>
     c84:	81 34       	cpi	r24, 0x41	; 65
     c86:	31 f0       	breq	.+12     	; 0xc94 <write_high_nibble+0x1a>
     c88:	08 95       	ret
     c8a:	83 34       	cpi	r24, 0x43	; 67
     c8c:	79 f0       	breq	.+30     	; 0xcac <write_high_nibble+0x32>
     c8e:	84 34       	cpi	r24, 0x44	; 68
     c90:	99 f0       	breq	.+38     	; 0xcb8 <write_high_nibble+0x3e>
     c92:	08 95       	ret
     c94:	8b b3       	in	r24, 0x1b	; 27
     c96:	8f 70       	andi	r24, 0x0F	; 15
     c98:	8b bb       	out	0x1b, r24	; 27
     c9a:	8b b3       	in	r24, 0x1b	; 27
     c9c:	86 2b       	or	r24, r22
     c9e:	8b bb       	out	0x1b, r24	; 27
     ca0:	88 b3       	in	r24, 0x18	; 24
     ca2:	8f 70       	andi	r24, 0x0F	; 15
     ca4:	88 bb       	out	0x18, r24	; 24
     ca6:	88 b3       	in	r24, 0x18	; 24
     ca8:	86 2b       	or	r24, r22
     caa:	88 bb       	out	0x18, r24	; 24
     cac:	85 b3       	in	r24, 0x15	; 21
     cae:	8f 70       	andi	r24, 0x0F	; 15
     cb0:	85 bb       	out	0x15, r24	; 21
     cb2:	85 b3       	in	r24, 0x15	; 21
     cb4:	86 2b       	or	r24, r22
     cb6:	85 bb       	out	0x15, r24	; 21
     cb8:	82 b3       	in	r24, 0x12	; 18
     cba:	8f 70       	andi	r24, 0x0F	; 15
     cbc:	82 bb       	out	0x12, r24	; 18
     cbe:	82 b3       	in	r24, 0x12	; 18
     cc0:	68 2b       	or	r22, r24
     cc2:	62 bb       	out	0x12, r22	; 18
     cc4:	08 95       	ret

00000cc6 <PWM_init>:
     cc6:	89 e6       	ldi	r24, 0x69	; 105
     cc8:	83 bf       	out	0x33, r24	; 51
     cca:	41 e0       	ldi	r20, 0x01	; 1
     ccc:	63 e0       	ldi	r22, 0x03	; 3
     cce:	82 e4       	ldi	r24, 0x42	; 66
     cd0:	0e 94 90 04 	call	0x920	; 0x920 <DIO_vsetPINDir>
     cd4:	08 95       	ret

00000cd6 <masterInit>:
     cd6:	80 eb       	ldi	r24, 0xB0	; 176
     cd8:	87 bb       	out	0x17, r24	; 23
     cda:	87 e5       	ldi	r24, 0x57	; 87
     cdc:	8d b9       	out	0x0d, r24	; 13
     cde:	08 95       	ret

00000ce0 <masterTransmit>:
     ce0:	8f b9       	out	0x0f, r24	; 15
     ce2:	77 9b       	sbis	0x0e, 7	; 14
     ce4:	fe cf       	rjmp	.-4      	; 0xce2 <masterTransmit+0x2>
     ce6:	08 95       	ret

00000ce8 <masterReceive>:
     ce8:	77 9b       	sbis	0x0e, 7	; 14
     cea:	fe cf       	rjmp	.-4      	; 0xce8 <masterReceive>
     cec:	8f b1       	in	r24, 0x0f	; 15
     cee:	08 95       	ret

00000cf0 <__subsf3>:
     cf0:	50 58       	subi	r21, 0x80	; 128

00000cf2 <__addsf3>:
     cf2:	bb 27       	eor	r27, r27
     cf4:	aa 27       	eor	r26, r26
     cf6:	0e 94 90 06 	call	0xd20	; 0xd20 <__addsf3x>
     cfa:	0c 94 03 08 	jmp	0x1006	; 0x1006 <__fp_round>
     cfe:	0e 94 f5 07 	call	0xfea	; 0xfea <__fp_pscA>
     d02:	38 f0       	brcs	.+14     	; 0xd12 <__addsf3+0x20>
     d04:	0e 94 fc 07 	call	0xff8	; 0xff8 <__fp_pscB>
     d08:	20 f0       	brcs	.+8      	; 0xd12 <__addsf3+0x20>
     d0a:	39 f4       	brne	.+14     	; 0xd1a <__addsf3+0x28>
     d0c:	9f 3f       	cpi	r25, 0xFF	; 255
     d0e:	19 f4       	brne	.+6      	; 0xd16 <__addsf3+0x24>
     d10:	26 f4       	brtc	.+8      	; 0xd1a <__addsf3+0x28>
     d12:	0c 94 f2 07 	jmp	0xfe4	; 0xfe4 <__fp_nan>
     d16:	0e f4       	brtc	.+2      	; 0xd1a <__addsf3+0x28>
     d18:	e0 95       	com	r30
     d1a:	e7 fb       	bst	r30, 7
     d1c:	0c 94 ec 07 	jmp	0xfd8	; 0xfd8 <__fp_inf>

00000d20 <__addsf3x>:
     d20:	e9 2f       	mov	r30, r25
     d22:	0e 94 14 08 	call	0x1028	; 0x1028 <__fp_split3>
     d26:	58 f3       	brcs	.-42     	; 0xcfe <__addsf3+0xc>
     d28:	ba 17       	cp	r27, r26
     d2a:	62 07       	cpc	r22, r18
     d2c:	73 07       	cpc	r23, r19
     d2e:	84 07       	cpc	r24, r20
     d30:	95 07       	cpc	r25, r21
     d32:	20 f0       	brcs	.+8      	; 0xd3c <__addsf3x+0x1c>
     d34:	79 f4       	brne	.+30     	; 0xd54 <__addsf3x+0x34>
     d36:	a6 f5       	brtc	.+104    	; 0xda0 <__addsf3x+0x80>
     d38:	0c 94 36 08 	jmp	0x106c	; 0x106c <__fp_zero>
     d3c:	0e f4       	brtc	.+2      	; 0xd40 <__addsf3x+0x20>
     d3e:	e0 95       	com	r30
     d40:	0b 2e       	mov	r0, r27
     d42:	ba 2f       	mov	r27, r26
     d44:	a0 2d       	mov	r26, r0
     d46:	0b 01       	movw	r0, r22
     d48:	b9 01       	movw	r22, r18
     d4a:	90 01       	movw	r18, r0
     d4c:	0c 01       	movw	r0, r24
     d4e:	ca 01       	movw	r24, r20
     d50:	a0 01       	movw	r20, r0
     d52:	11 24       	eor	r1, r1
     d54:	ff 27       	eor	r31, r31
     d56:	59 1b       	sub	r21, r25
     d58:	99 f0       	breq	.+38     	; 0xd80 <__addsf3x+0x60>
     d5a:	59 3f       	cpi	r21, 0xF9	; 249
     d5c:	50 f4       	brcc	.+20     	; 0xd72 <__addsf3x+0x52>
     d5e:	50 3e       	cpi	r21, 0xE0	; 224
     d60:	68 f1       	brcs	.+90     	; 0xdbc <__addsf3x+0x9c>
     d62:	1a 16       	cp	r1, r26
     d64:	f0 40       	sbci	r31, 0x00	; 0
     d66:	a2 2f       	mov	r26, r18
     d68:	23 2f       	mov	r18, r19
     d6a:	34 2f       	mov	r19, r20
     d6c:	44 27       	eor	r20, r20
     d6e:	58 5f       	subi	r21, 0xF8	; 248
     d70:	f3 cf       	rjmp	.-26     	; 0xd58 <__addsf3x+0x38>
     d72:	46 95       	lsr	r20
     d74:	37 95       	ror	r19
     d76:	27 95       	ror	r18
     d78:	a7 95       	ror	r26
     d7a:	f0 40       	sbci	r31, 0x00	; 0
     d7c:	53 95       	inc	r21
     d7e:	c9 f7       	brne	.-14     	; 0xd72 <__addsf3x+0x52>
     d80:	7e f4       	brtc	.+30     	; 0xda0 <__addsf3x+0x80>
     d82:	1f 16       	cp	r1, r31
     d84:	ba 0b       	sbc	r27, r26
     d86:	62 0b       	sbc	r22, r18
     d88:	73 0b       	sbc	r23, r19
     d8a:	84 0b       	sbc	r24, r20
     d8c:	ba f0       	brmi	.+46     	; 0xdbc <__addsf3x+0x9c>
     d8e:	91 50       	subi	r25, 0x01	; 1
     d90:	a1 f0       	breq	.+40     	; 0xdba <__addsf3x+0x9a>
     d92:	ff 0f       	add	r31, r31
     d94:	bb 1f       	adc	r27, r27
     d96:	66 1f       	adc	r22, r22
     d98:	77 1f       	adc	r23, r23
     d9a:	88 1f       	adc	r24, r24
     d9c:	c2 f7       	brpl	.-16     	; 0xd8e <__addsf3x+0x6e>
     d9e:	0e c0       	rjmp	.+28     	; 0xdbc <__addsf3x+0x9c>
     da0:	ba 0f       	add	r27, r26
     da2:	62 1f       	adc	r22, r18
     da4:	73 1f       	adc	r23, r19
     da6:	84 1f       	adc	r24, r20
     da8:	48 f4       	brcc	.+18     	; 0xdbc <__addsf3x+0x9c>
     daa:	87 95       	ror	r24
     dac:	77 95       	ror	r23
     dae:	67 95       	ror	r22
     db0:	b7 95       	ror	r27
     db2:	f7 95       	ror	r31
     db4:	9e 3f       	cpi	r25, 0xFE	; 254
     db6:	08 f0       	brcs	.+2      	; 0xdba <__addsf3x+0x9a>
     db8:	b0 cf       	rjmp	.-160    	; 0xd1a <__addsf3+0x28>
     dba:	93 95       	inc	r25
     dbc:	88 0f       	add	r24, r24
     dbe:	08 f0       	brcs	.+2      	; 0xdc2 <__addsf3x+0xa2>
     dc0:	99 27       	eor	r25, r25
     dc2:	ee 0f       	add	r30, r30
     dc4:	97 95       	ror	r25
     dc6:	87 95       	ror	r24
     dc8:	08 95       	ret

00000dca <__cmpsf2>:
     dca:	0e 94 c8 07 	call	0xf90	; 0xf90 <__fp_cmp>
     dce:	08 f4       	brcc	.+2      	; 0xdd2 <__cmpsf2+0x8>
     dd0:	81 e0       	ldi	r24, 0x01	; 1
     dd2:	08 95       	ret

00000dd4 <__divsf3>:
     dd4:	0e 94 fe 06 	call	0xdfc	; 0xdfc <__divsf3x>
     dd8:	0c 94 03 08 	jmp	0x1006	; 0x1006 <__fp_round>
     ddc:	0e 94 fc 07 	call	0xff8	; 0xff8 <__fp_pscB>
     de0:	58 f0       	brcs	.+22     	; 0xdf8 <__divsf3+0x24>
     de2:	0e 94 f5 07 	call	0xfea	; 0xfea <__fp_pscA>
     de6:	40 f0       	brcs	.+16     	; 0xdf8 <__divsf3+0x24>
     de8:	29 f4       	brne	.+10     	; 0xdf4 <__divsf3+0x20>
     dea:	5f 3f       	cpi	r21, 0xFF	; 255
     dec:	29 f0       	breq	.+10     	; 0xdf8 <__divsf3+0x24>
     dee:	0c 94 ec 07 	jmp	0xfd8	; 0xfd8 <__fp_inf>
     df2:	51 11       	cpse	r21, r1
     df4:	0c 94 37 08 	jmp	0x106e	; 0x106e <__fp_szero>
     df8:	0c 94 f2 07 	jmp	0xfe4	; 0xfe4 <__fp_nan>

00000dfc <__divsf3x>:
     dfc:	0e 94 14 08 	call	0x1028	; 0x1028 <__fp_split3>
     e00:	68 f3       	brcs	.-38     	; 0xddc <__divsf3+0x8>

00000e02 <__divsf3_pse>:
     e02:	99 23       	and	r25, r25
     e04:	b1 f3       	breq	.-20     	; 0xdf2 <__divsf3+0x1e>
     e06:	55 23       	and	r21, r21
     e08:	91 f3       	breq	.-28     	; 0xdee <__divsf3+0x1a>
     e0a:	95 1b       	sub	r25, r21
     e0c:	55 0b       	sbc	r21, r21
     e0e:	bb 27       	eor	r27, r27
     e10:	aa 27       	eor	r26, r26
     e12:	62 17       	cp	r22, r18
     e14:	73 07       	cpc	r23, r19
     e16:	84 07       	cpc	r24, r20
     e18:	38 f0       	brcs	.+14     	; 0xe28 <__divsf3_pse+0x26>
     e1a:	9f 5f       	subi	r25, 0xFF	; 255
     e1c:	5f 4f       	sbci	r21, 0xFF	; 255
     e1e:	22 0f       	add	r18, r18
     e20:	33 1f       	adc	r19, r19
     e22:	44 1f       	adc	r20, r20
     e24:	aa 1f       	adc	r26, r26
     e26:	a9 f3       	breq	.-22     	; 0xe12 <__divsf3_pse+0x10>
     e28:	35 d0       	rcall	.+106    	; 0xe94 <__divsf3_pse+0x92>
     e2a:	0e 2e       	mov	r0, r30
     e2c:	3a f0       	brmi	.+14     	; 0xe3c <__divsf3_pse+0x3a>
     e2e:	e0 e8       	ldi	r30, 0x80	; 128
     e30:	32 d0       	rcall	.+100    	; 0xe96 <__divsf3_pse+0x94>
     e32:	91 50       	subi	r25, 0x01	; 1
     e34:	50 40       	sbci	r21, 0x00	; 0
     e36:	e6 95       	lsr	r30
     e38:	00 1c       	adc	r0, r0
     e3a:	ca f7       	brpl	.-14     	; 0xe2e <__divsf3_pse+0x2c>
     e3c:	2b d0       	rcall	.+86     	; 0xe94 <__divsf3_pse+0x92>
     e3e:	fe 2f       	mov	r31, r30
     e40:	29 d0       	rcall	.+82     	; 0xe94 <__divsf3_pse+0x92>
     e42:	66 0f       	add	r22, r22
     e44:	77 1f       	adc	r23, r23
     e46:	88 1f       	adc	r24, r24
     e48:	bb 1f       	adc	r27, r27
     e4a:	26 17       	cp	r18, r22
     e4c:	37 07       	cpc	r19, r23
     e4e:	48 07       	cpc	r20, r24
     e50:	ab 07       	cpc	r26, r27
     e52:	b0 e8       	ldi	r27, 0x80	; 128
     e54:	09 f0       	breq	.+2      	; 0xe58 <__divsf3_pse+0x56>
     e56:	bb 0b       	sbc	r27, r27
     e58:	80 2d       	mov	r24, r0
     e5a:	bf 01       	movw	r22, r30
     e5c:	ff 27       	eor	r31, r31
     e5e:	93 58       	subi	r25, 0x83	; 131
     e60:	5f 4f       	sbci	r21, 0xFF	; 255
     e62:	3a f0       	brmi	.+14     	; 0xe72 <__divsf3_pse+0x70>
     e64:	9e 3f       	cpi	r25, 0xFE	; 254
     e66:	51 05       	cpc	r21, r1
     e68:	78 f0       	brcs	.+30     	; 0xe88 <__divsf3_pse+0x86>
     e6a:	0c 94 ec 07 	jmp	0xfd8	; 0xfd8 <__fp_inf>
     e6e:	0c 94 37 08 	jmp	0x106e	; 0x106e <__fp_szero>
     e72:	5f 3f       	cpi	r21, 0xFF	; 255
     e74:	e4 f3       	brlt	.-8      	; 0xe6e <__divsf3_pse+0x6c>
     e76:	98 3e       	cpi	r25, 0xE8	; 232
     e78:	d4 f3       	brlt	.-12     	; 0xe6e <__divsf3_pse+0x6c>
     e7a:	86 95       	lsr	r24
     e7c:	77 95       	ror	r23
     e7e:	67 95       	ror	r22
     e80:	b7 95       	ror	r27
     e82:	f7 95       	ror	r31
     e84:	9f 5f       	subi	r25, 0xFF	; 255
     e86:	c9 f7       	brne	.-14     	; 0xe7a <__divsf3_pse+0x78>
     e88:	88 0f       	add	r24, r24
     e8a:	91 1d       	adc	r25, r1
     e8c:	96 95       	lsr	r25
     e8e:	87 95       	ror	r24
     e90:	97 f9       	bld	r25, 7
     e92:	08 95       	ret
     e94:	e1 e0       	ldi	r30, 0x01	; 1
     e96:	66 0f       	add	r22, r22
     e98:	77 1f       	adc	r23, r23
     e9a:	88 1f       	adc	r24, r24
     e9c:	bb 1f       	adc	r27, r27
     e9e:	62 17       	cp	r22, r18
     ea0:	73 07       	cpc	r23, r19
     ea2:	84 07       	cpc	r24, r20
     ea4:	ba 07       	cpc	r27, r26
     ea6:	20 f0       	brcs	.+8      	; 0xeb0 <__divsf3_pse+0xae>
     ea8:	62 1b       	sub	r22, r18
     eaa:	73 0b       	sbc	r23, r19
     eac:	84 0b       	sbc	r24, r20
     eae:	ba 0b       	sbc	r27, r26
     eb0:	ee 1f       	adc	r30, r30
     eb2:	88 f7       	brcc	.-30     	; 0xe96 <__divsf3_pse+0x94>
     eb4:	e0 95       	com	r30
     eb6:	08 95       	ret

00000eb8 <__fixunssfsi>:
     eb8:	0e 94 1c 08 	call	0x1038	; 0x1038 <__fp_splitA>
     ebc:	88 f0       	brcs	.+34     	; 0xee0 <__fixunssfsi+0x28>
     ebe:	9f 57       	subi	r25, 0x7F	; 127
     ec0:	98 f0       	brcs	.+38     	; 0xee8 <__fixunssfsi+0x30>
     ec2:	b9 2f       	mov	r27, r25
     ec4:	99 27       	eor	r25, r25
     ec6:	b7 51       	subi	r27, 0x17	; 23
     ec8:	b0 f0       	brcs	.+44     	; 0xef6 <__fixunssfsi+0x3e>
     eca:	e1 f0       	breq	.+56     	; 0xf04 <__fixunssfsi+0x4c>
     ecc:	66 0f       	add	r22, r22
     ece:	77 1f       	adc	r23, r23
     ed0:	88 1f       	adc	r24, r24
     ed2:	99 1f       	adc	r25, r25
     ed4:	1a f0       	brmi	.+6      	; 0xedc <__fixunssfsi+0x24>
     ed6:	ba 95       	dec	r27
     ed8:	c9 f7       	brne	.-14     	; 0xecc <__fixunssfsi+0x14>
     eda:	14 c0       	rjmp	.+40     	; 0xf04 <__fixunssfsi+0x4c>
     edc:	b1 30       	cpi	r27, 0x01	; 1
     ede:	91 f0       	breq	.+36     	; 0xf04 <__fixunssfsi+0x4c>
     ee0:	0e 94 36 08 	call	0x106c	; 0x106c <__fp_zero>
     ee4:	b1 e0       	ldi	r27, 0x01	; 1
     ee6:	08 95       	ret
     ee8:	0c 94 36 08 	jmp	0x106c	; 0x106c <__fp_zero>
     eec:	67 2f       	mov	r22, r23
     eee:	78 2f       	mov	r23, r24
     ef0:	88 27       	eor	r24, r24
     ef2:	b8 5f       	subi	r27, 0xF8	; 248
     ef4:	39 f0       	breq	.+14     	; 0xf04 <__fixunssfsi+0x4c>
     ef6:	b9 3f       	cpi	r27, 0xF9	; 249
     ef8:	cc f3       	brlt	.-14     	; 0xeec <__fixunssfsi+0x34>
     efa:	86 95       	lsr	r24
     efc:	77 95       	ror	r23
     efe:	67 95       	ror	r22
     f00:	b3 95       	inc	r27
     f02:	d9 f7       	brne	.-10     	; 0xefa <__fixunssfsi+0x42>
     f04:	3e f4       	brtc	.+14     	; 0xf14 <__fixunssfsi+0x5c>
     f06:	90 95       	com	r25
     f08:	80 95       	com	r24
     f0a:	70 95       	com	r23
     f0c:	61 95       	neg	r22
     f0e:	7f 4f       	sbci	r23, 0xFF	; 255
     f10:	8f 4f       	sbci	r24, 0xFF	; 255
     f12:	9f 4f       	sbci	r25, 0xFF	; 255
     f14:	08 95       	ret

00000f16 <__floatunsisf>:
     f16:	e8 94       	clt
     f18:	09 c0       	rjmp	.+18     	; 0xf2c <__floatsisf+0x12>

00000f1a <__floatsisf>:
     f1a:	97 fb       	bst	r25, 7
     f1c:	3e f4       	brtc	.+14     	; 0xf2c <__floatsisf+0x12>
     f1e:	90 95       	com	r25
     f20:	80 95       	com	r24
     f22:	70 95       	com	r23
     f24:	61 95       	neg	r22
     f26:	7f 4f       	sbci	r23, 0xFF	; 255
     f28:	8f 4f       	sbci	r24, 0xFF	; 255
     f2a:	9f 4f       	sbci	r25, 0xFF	; 255
     f2c:	99 23       	and	r25, r25
     f2e:	a9 f0       	breq	.+42     	; 0xf5a <__floatsisf+0x40>
     f30:	f9 2f       	mov	r31, r25
     f32:	96 e9       	ldi	r25, 0x96	; 150
     f34:	bb 27       	eor	r27, r27
     f36:	93 95       	inc	r25
     f38:	f6 95       	lsr	r31
     f3a:	87 95       	ror	r24
     f3c:	77 95       	ror	r23
     f3e:	67 95       	ror	r22
     f40:	b7 95       	ror	r27
     f42:	f1 11       	cpse	r31, r1
     f44:	f8 cf       	rjmp	.-16     	; 0xf36 <__floatsisf+0x1c>
     f46:	fa f4       	brpl	.+62     	; 0xf86 <__floatsisf+0x6c>
     f48:	bb 0f       	add	r27, r27
     f4a:	11 f4       	brne	.+4      	; 0xf50 <__floatsisf+0x36>
     f4c:	60 ff       	sbrs	r22, 0
     f4e:	1b c0       	rjmp	.+54     	; 0xf86 <__floatsisf+0x6c>
     f50:	6f 5f       	subi	r22, 0xFF	; 255
     f52:	7f 4f       	sbci	r23, 0xFF	; 255
     f54:	8f 4f       	sbci	r24, 0xFF	; 255
     f56:	9f 4f       	sbci	r25, 0xFF	; 255
     f58:	16 c0       	rjmp	.+44     	; 0xf86 <__floatsisf+0x6c>
     f5a:	88 23       	and	r24, r24
     f5c:	11 f0       	breq	.+4      	; 0xf62 <__floatsisf+0x48>
     f5e:	96 e9       	ldi	r25, 0x96	; 150
     f60:	11 c0       	rjmp	.+34     	; 0xf84 <__floatsisf+0x6a>
     f62:	77 23       	and	r23, r23
     f64:	21 f0       	breq	.+8      	; 0xf6e <__floatsisf+0x54>
     f66:	9e e8       	ldi	r25, 0x8E	; 142
     f68:	87 2f       	mov	r24, r23
     f6a:	76 2f       	mov	r23, r22
     f6c:	05 c0       	rjmp	.+10     	; 0xf78 <__floatsisf+0x5e>
     f6e:	66 23       	and	r22, r22
     f70:	71 f0       	breq	.+28     	; 0xf8e <__floatsisf+0x74>
     f72:	96 e8       	ldi	r25, 0x86	; 134
     f74:	86 2f       	mov	r24, r22
     f76:	70 e0       	ldi	r23, 0x00	; 0
     f78:	60 e0       	ldi	r22, 0x00	; 0
     f7a:	2a f0       	brmi	.+10     	; 0xf86 <__floatsisf+0x6c>
     f7c:	9a 95       	dec	r25
     f7e:	66 0f       	add	r22, r22
     f80:	77 1f       	adc	r23, r23
     f82:	88 1f       	adc	r24, r24
     f84:	da f7       	brpl	.-10     	; 0xf7c <__floatsisf+0x62>
     f86:	88 0f       	add	r24, r24
     f88:	96 95       	lsr	r25
     f8a:	87 95       	ror	r24
     f8c:	97 f9       	bld	r25, 7
     f8e:	08 95       	ret

00000f90 <__fp_cmp>:
     f90:	99 0f       	add	r25, r25
     f92:	00 08       	sbc	r0, r0
     f94:	55 0f       	add	r21, r21
     f96:	aa 0b       	sbc	r26, r26
     f98:	e0 e8       	ldi	r30, 0x80	; 128
     f9a:	fe ef       	ldi	r31, 0xFE	; 254
     f9c:	16 16       	cp	r1, r22
     f9e:	17 06       	cpc	r1, r23
     fa0:	e8 07       	cpc	r30, r24
     fa2:	f9 07       	cpc	r31, r25
     fa4:	c0 f0       	brcs	.+48     	; 0xfd6 <__fp_cmp+0x46>
     fa6:	12 16       	cp	r1, r18
     fa8:	13 06       	cpc	r1, r19
     faa:	e4 07       	cpc	r30, r20
     fac:	f5 07       	cpc	r31, r21
     fae:	98 f0       	brcs	.+38     	; 0xfd6 <__fp_cmp+0x46>
     fb0:	62 1b       	sub	r22, r18
     fb2:	73 0b       	sbc	r23, r19
     fb4:	84 0b       	sbc	r24, r20
     fb6:	95 0b       	sbc	r25, r21
     fb8:	39 f4       	brne	.+14     	; 0xfc8 <__fp_cmp+0x38>
     fba:	0a 26       	eor	r0, r26
     fbc:	61 f0       	breq	.+24     	; 0xfd6 <__fp_cmp+0x46>
     fbe:	23 2b       	or	r18, r19
     fc0:	24 2b       	or	r18, r20
     fc2:	25 2b       	or	r18, r21
     fc4:	21 f4       	brne	.+8      	; 0xfce <__fp_cmp+0x3e>
     fc6:	08 95       	ret
     fc8:	0a 26       	eor	r0, r26
     fca:	09 f4       	brne	.+2      	; 0xfce <__fp_cmp+0x3e>
     fcc:	a1 40       	sbci	r26, 0x01	; 1
     fce:	a6 95       	lsr	r26
     fd0:	8f ef       	ldi	r24, 0xFF	; 255
     fd2:	81 1d       	adc	r24, r1
     fd4:	81 1d       	adc	r24, r1
     fd6:	08 95       	ret

00000fd8 <__fp_inf>:
     fd8:	97 f9       	bld	r25, 7
     fda:	9f 67       	ori	r25, 0x7F	; 127
     fdc:	80 e8       	ldi	r24, 0x80	; 128
     fde:	70 e0       	ldi	r23, 0x00	; 0
     fe0:	60 e0       	ldi	r22, 0x00	; 0
     fe2:	08 95       	ret

00000fe4 <__fp_nan>:
     fe4:	9f ef       	ldi	r25, 0xFF	; 255
     fe6:	80 ec       	ldi	r24, 0xC0	; 192
     fe8:	08 95       	ret

00000fea <__fp_pscA>:
     fea:	00 24       	eor	r0, r0
     fec:	0a 94       	dec	r0
     fee:	16 16       	cp	r1, r22
     ff0:	17 06       	cpc	r1, r23
     ff2:	18 06       	cpc	r1, r24
     ff4:	09 06       	cpc	r0, r25
     ff6:	08 95       	ret

00000ff8 <__fp_pscB>:
     ff8:	00 24       	eor	r0, r0
     ffa:	0a 94       	dec	r0
     ffc:	12 16       	cp	r1, r18
     ffe:	13 06       	cpc	r1, r19
    1000:	14 06       	cpc	r1, r20
    1002:	05 06       	cpc	r0, r21
    1004:	08 95       	ret

00001006 <__fp_round>:
    1006:	09 2e       	mov	r0, r25
    1008:	03 94       	inc	r0
    100a:	00 0c       	add	r0, r0
    100c:	11 f4       	brne	.+4      	; 0x1012 <__fp_round+0xc>
    100e:	88 23       	and	r24, r24
    1010:	52 f0       	brmi	.+20     	; 0x1026 <__fp_round+0x20>
    1012:	bb 0f       	add	r27, r27
    1014:	40 f4       	brcc	.+16     	; 0x1026 <__fp_round+0x20>
    1016:	bf 2b       	or	r27, r31
    1018:	11 f4       	brne	.+4      	; 0x101e <__fp_round+0x18>
    101a:	60 ff       	sbrs	r22, 0
    101c:	04 c0       	rjmp	.+8      	; 0x1026 <__fp_round+0x20>
    101e:	6f 5f       	subi	r22, 0xFF	; 255
    1020:	7f 4f       	sbci	r23, 0xFF	; 255
    1022:	8f 4f       	sbci	r24, 0xFF	; 255
    1024:	9f 4f       	sbci	r25, 0xFF	; 255
    1026:	08 95       	ret

00001028 <__fp_split3>:
    1028:	57 fd       	sbrc	r21, 7
    102a:	90 58       	subi	r25, 0x80	; 128
    102c:	44 0f       	add	r20, r20
    102e:	55 1f       	adc	r21, r21
    1030:	59 f0       	breq	.+22     	; 0x1048 <__fp_splitA+0x10>
    1032:	5f 3f       	cpi	r21, 0xFF	; 255
    1034:	71 f0       	breq	.+28     	; 0x1052 <__fp_splitA+0x1a>
    1036:	47 95       	ror	r20

00001038 <__fp_splitA>:
    1038:	88 0f       	add	r24, r24
    103a:	97 fb       	bst	r25, 7
    103c:	99 1f       	adc	r25, r25
    103e:	61 f0       	breq	.+24     	; 0x1058 <__fp_splitA+0x20>
    1040:	9f 3f       	cpi	r25, 0xFF	; 255
    1042:	79 f0       	breq	.+30     	; 0x1062 <__fp_splitA+0x2a>
    1044:	87 95       	ror	r24
    1046:	08 95       	ret
    1048:	12 16       	cp	r1, r18
    104a:	13 06       	cpc	r1, r19
    104c:	14 06       	cpc	r1, r20
    104e:	55 1f       	adc	r21, r21
    1050:	f2 cf       	rjmp	.-28     	; 0x1036 <__fp_split3+0xe>
    1052:	46 95       	lsr	r20
    1054:	f1 df       	rcall	.-30     	; 0x1038 <__fp_splitA>
    1056:	08 c0       	rjmp	.+16     	; 0x1068 <__fp_splitA+0x30>
    1058:	16 16       	cp	r1, r22
    105a:	17 06       	cpc	r1, r23
    105c:	18 06       	cpc	r1, r24
    105e:	99 1f       	adc	r25, r25
    1060:	f1 cf       	rjmp	.-30     	; 0x1044 <__fp_splitA+0xc>
    1062:	86 95       	lsr	r24
    1064:	71 05       	cpc	r23, r1
    1066:	61 05       	cpc	r22, r1
    1068:	08 94       	sec
    106a:	08 95       	ret

0000106c <__fp_zero>:
    106c:	e8 94       	clt

0000106e <__fp_szero>:
    106e:	bb 27       	eor	r27, r27
    1070:	66 27       	eor	r22, r22
    1072:	77 27       	eor	r23, r23
    1074:	cb 01       	movw	r24, r22
    1076:	97 f9       	bld	r25, 7
    1078:	08 95       	ret

0000107a <__gesf2>:
    107a:	0e 94 c8 07 	call	0xf90	; 0xf90 <__fp_cmp>
    107e:	08 f4       	brcc	.+2      	; 0x1082 <__gesf2+0x8>
    1080:	8f ef       	ldi	r24, 0xFF	; 255
    1082:	08 95       	ret

00001084 <__mulsf3>:
    1084:	0e 94 55 08 	call	0x10aa	; 0x10aa <__mulsf3x>
    1088:	0c 94 03 08 	jmp	0x1006	; 0x1006 <__fp_round>
    108c:	0e 94 f5 07 	call	0xfea	; 0xfea <__fp_pscA>
    1090:	38 f0       	brcs	.+14     	; 0x10a0 <__mulsf3+0x1c>
    1092:	0e 94 fc 07 	call	0xff8	; 0xff8 <__fp_pscB>
    1096:	20 f0       	brcs	.+8      	; 0x10a0 <__mulsf3+0x1c>
    1098:	95 23       	and	r25, r21
    109a:	11 f0       	breq	.+4      	; 0x10a0 <__mulsf3+0x1c>
    109c:	0c 94 ec 07 	jmp	0xfd8	; 0xfd8 <__fp_inf>
    10a0:	0c 94 f2 07 	jmp	0xfe4	; 0xfe4 <__fp_nan>
    10a4:	11 24       	eor	r1, r1
    10a6:	0c 94 37 08 	jmp	0x106e	; 0x106e <__fp_szero>

000010aa <__mulsf3x>:
    10aa:	0e 94 14 08 	call	0x1028	; 0x1028 <__fp_split3>
    10ae:	70 f3       	brcs	.-36     	; 0x108c <__mulsf3+0x8>

000010b0 <__mulsf3_pse>:
    10b0:	95 9f       	mul	r25, r21
    10b2:	c1 f3       	breq	.-16     	; 0x10a4 <__mulsf3+0x20>
    10b4:	95 0f       	add	r25, r21
    10b6:	50 e0       	ldi	r21, 0x00	; 0
    10b8:	55 1f       	adc	r21, r21
    10ba:	62 9f       	mul	r22, r18
    10bc:	f0 01       	movw	r30, r0
    10be:	72 9f       	mul	r23, r18
    10c0:	bb 27       	eor	r27, r27
    10c2:	f0 0d       	add	r31, r0
    10c4:	b1 1d       	adc	r27, r1
    10c6:	63 9f       	mul	r22, r19
    10c8:	aa 27       	eor	r26, r26
    10ca:	f0 0d       	add	r31, r0
    10cc:	b1 1d       	adc	r27, r1
    10ce:	aa 1f       	adc	r26, r26
    10d0:	64 9f       	mul	r22, r20
    10d2:	66 27       	eor	r22, r22
    10d4:	b0 0d       	add	r27, r0
    10d6:	a1 1d       	adc	r26, r1
    10d8:	66 1f       	adc	r22, r22
    10da:	82 9f       	mul	r24, r18
    10dc:	22 27       	eor	r18, r18
    10de:	b0 0d       	add	r27, r0
    10e0:	a1 1d       	adc	r26, r1
    10e2:	62 1f       	adc	r22, r18
    10e4:	73 9f       	mul	r23, r19
    10e6:	b0 0d       	add	r27, r0
    10e8:	a1 1d       	adc	r26, r1
    10ea:	62 1f       	adc	r22, r18
    10ec:	83 9f       	mul	r24, r19
    10ee:	a0 0d       	add	r26, r0
    10f0:	61 1d       	adc	r22, r1
    10f2:	22 1f       	adc	r18, r18
    10f4:	74 9f       	mul	r23, r20
    10f6:	33 27       	eor	r19, r19
    10f8:	a0 0d       	add	r26, r0
    10fa:	61 1d       	adc	r22, r1
    10fc:	23 1f       	adc	r18, r19
    10fe:	84 9f       	mul	r24, r20
    1100:	60 0d       	add	r22, r0
    1102:	21 1d       	adc	r18, r1
    1104:	82 2f       	mov	r24, r18
    1106:	76 2f       	mov	r23, r22
    1108:	6a 2f       	mov	r22, r26
    110a:	11 24       	eor	r1, r1
    110c:	9f 57       	subi	r25, 0x7F	; 127
    110e:	50 40       	sbci	r21, 0x00	; 0
    1110:	9a f0       	brmi	.+38     	; 0x1138 <__mulsf3_pse+0x88>
    1112:	f1 f0       	breq	.+60     	; 0x1150 <__mulsf3_pse+0xa0>
    1114:	88 23       	and	r24, r24
    1116:	4a f0       	brmi	.+18     	; 0x112a <__mulsf3_pse+0x7a>
    1118:	ee 0f       	add	r30, r30
    111a:	ff 1f       	adc	r31, r31
    111c:	bb 1f       	adc	r27, r27
    111e:	66 1f       	adc	r22, r22
    1120:	77 1f       	adc	r23, r23
    1122:	88 1f       	adc	r24, r24
    1124:	91 50       	subi	r25, 0x01	; 1
    1126:	50 40       	sbci	r21, 0x00	; 0
    1128:	a9 f7       	brne	.-22     	; 0x1114 <__mulsf3_pse+0x64>
    112a:	9e 3f       	cpi	r25, 0xFE	; 254
    112c:	51 05       	cpc	r21, r1
    112e:	80 f0       	brcs	.+32     	; 0x1150 <__mulsf3_pse+0xa0>
    1130:	0c 94 ec 07 	jmp	0xfd8	; 0xfd8 <__fp_inf>
    1134:	0c 94 37 08 	jmp	0x106e	; 0x106e <__fp_szero>
    1138:	5f 3f       	cpi	r21, 0xFF	; 255
    113a:	e4 f3       	brlt	.-8      	; 0x1134 <__mulsf3_pse+0x84>
    113c:	98 3e       	cpi	r25, 0xE8	; 232
    113e:	d4 f3       	brlt	.-12     	; 0x1134 <__mulsf3_pse+0x84>
    1140:	86 95       	lsr	r24
    1142:	77 95       	ror	r23
    1144:	67 95       	ror	r22
    1146:	b7 95       	ror	r27
    1148:	f7 95       	ror	r31
    114a:	e7 95       	ror	r30
    114c:	9f 5f       	subi	r25, 0xFF	; 255
    114e:	c1 f7       	brne	.-16     	; 0x1140 <__mulsf3_pse+0x90>
    1150:	fe 2b       	or	r31, r30
    1152:	88 0f       	add	r24, r24
    1154:	91 1d       	adc	r25, r1
    1156:	96 95       	lsr	r25
    1158:	87 95       	ror	r24
    115a:	97 f9       	bld	r25, 7
    115c:	08 95       	ret

0000115e <_exit>:
    115e:	f8 94       	cli

00001160 <__stop_program>:
    1160:	ff cf       	rjmp	.-2      	; 0x1160 <__stop_program>
